"use strict";(self.webpackChunknotes_3=self.webpackChunknotes_3||[]).push([[95294],{54213:(n,e,a)=>{a.d(e,{R:()=>r,x:()=>i});var s=a(36672);const o={},t=s.createContext(o);function r(n){const e=s.useContext(t);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:r(n.components),s.createElement(t.Provider,{value:e},n.children)}},92883:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"AI/Agno/\u56e2\u961f/\u8def\u7531\u6a21\u5f0f","title":"\u8def\u7531\u6a21\u5f0f","description":"Agno\u56e2\u961f\u8def\u7531\u6a21\u5f0f\u7684\u8be6\u7ec6\u8bf4\u660e","source":"@site/docs/AI/Agno/\u56e2\u961f/\u8def\u7531\u6a21\u5f0f.mdx","sourceDirName":"AI/Agno/\u56e2\u961f","slug":"/AI/Agno/\u56e2\u961f/\u8def\u7531\u6a21\u5f0f","permalink":"/notes3/docs/AI/Agno/\u56e2\u961f/\u8def\u7531\u6a21\u5f0f","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/AI/Agno/\u56e2\u961f/\u8def\u7531\u6a21\u5f0f.mdx","tags":[],"version":"current","frontMatter":{"title":"\u8def\u7531\u6a21\u5f0f","description":"Agno\u56e2\u961f\u8def\u7531\u6a21\u5f0f\u7684\u8be6\u7ec6\u8bf4\u660e"},"sidebar":"ai","previous":{"title":"\u56e2\u961f\u6a21\u5f0f\u5bf9\u6bd4\uff1a\u8def\u7531\u3001\u534f\u8c03\u4e0e\u534f\u4f5c","permalink":"/notes3/docs/AI/Agno/\u56e2\u961f/\u56e2\u961f\u6a21\u5f0f\u5bf9\u6bd4"},"next":{"title":"\u4ecb\u7ecd","permalink":"/notes3/docs/AI/Agno/\u5de5\u5177/\u4ecb\u7ecd"}}');var o=a(23420),t=a(54213);const r={title:"\u8def\u7531\u6a21\u5f0f",description:"Agno\u56e2\u961f\u8def\u7531\u6a21\u5f0f\u7684\u8be6\u7ec6\u8bf4\u660e"},i="\u8def\u7531\u6a21\u5f0f",l={},c=[{value:"\u8def\u7531\u6a21\u5f0f\u5982\u4f55\u5de5\u4f5c",id:"\u8def\u7531\u6a21\u5f0f\u5982\u4f55\u5de5\u4f5c",level:2},{value:"1. \u521b\u5efa\u591a\u8bed\u8a00\u56e2\u961f",id:"1-\u521b\u5efa\u591a\u8bed\u8a00\u56e2\u961f",level:3},{value:"2. \u8fd0\u884c\u56e2\u961f",id:"2-\u8fd0\u884c\u56e2\u961f",level:3},{value:"\u8def\u7531\u6a21\u5f0f\u7684\u7ed3\u6784\u5316\u8f93\u51fa",id:"\u8def\u7531\u6a21\u5f0f\u7684\u7ed3\u6784\u5316\u8f93\u51fa",level:2},{value:"\u5b9a\u4e49\u7ed3\u6784\u5316\u8f93\u51fa\u6a21\u578b",id:"\u5b9a\u4e49\u7ed3\u6784\u5316\u8f93\u51fa\u6a21\u578b",level:3}];function m(n){const e={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"\u8def\u7531\u6a21\u5f0f",children:"\u8def\u7531\u6a21\u5f0f"})}),"\n",(0,o.jsxs)(e.p,{children:["\u5728",(0,o.jsx)(e.strong,{children:"\u8def\u7531\u6a21\u5f0f"}),"\u4e2d\uff0c\u56e2\u961f\u9886\u5bfc\u6839\u636e\u8bf7\u6c42\u7684\u5185\u5bb9\u5c06\u7528\u6237\u67e5\u8be2\u5f15\u5bfc\u5230\u6700\u5408\u9002\u7684\u56e2\u961f\u6210\u5458\u3002"]}),"\n",(0,o.jsx)(e.p,{children:"\u56e2\u961f\u9886\u5bfc\u5145\u5f53\u667a\u80fd\u8def\u7531\u5668\uff0c\u5206\u6790\u67e5\u8be2\u5e76\u9009\u62e9\u6700\u9002\u5408\u5904\u7406\u5b83\u7684\u4ee3\u7406\u3002\u7136\u540e\uff0c\u6210\u5458\u7684\u54cd\u5e94\u76f4\u63a5\u8fd4\u56de\u7ed9\u7528\u6237\u3002"}),"\n",(0,o.jsx)(e.h2,{id:"\u8def\u7531\u6a21\u5f0f\u5982\u4f55\u5de5\u4f5c",children:"\u8def\u7531\u6a21\u5f0f\u5982\u4f55\u5de5\u4f5c"}),"\n",(0,o.jsx)(e.p,{children:'\u5728"\u8def\u7531"\u6a21\u5f0f\u4e2d\uff1a'}),"\n",(0,o.jsxs)(e.ol,{children:["\n",(0,o.jsx)(e.li,{children:"\u56e2\u961f\u63a5\u6536\u7528\u6237\u67e5\u8be2"}),"\n",(0,o.jsx)(e.li,{children:"\u56e2\u961f\u9886\u5bfc\u5206\u6790\u67e5\u8be2\uff0c\u786e\u5b9a\u54ea\u4e2a\u56e2\u961f\u6210\u5458\u62e5\u6709\u5408\u9002\u7684\u4e13\u4e1a\u77e5\u8bc6"}),"\n",(0,o.jsx)(e.li,{children:"\u67e5\u8be2\u88ab\u8f6c\u53d1\u7ed9\u9009\u5b9a\u7684\u56e2\u961f\u6210\u5458"}),"\n",(0,o.jsx)(e.li,{children:"\u56e2\u961f\u6210\u5458\u7684\u54cd\u5e94\u76f4\u63a5\u8fd4\u56de\u7ed9\u7528\u6237"}),"\n"]}),"\n",(0,o.jsx)(e.p,{children:"\u5f53\u60a8\u62e5\u6709\u5177\u6709\u4e0d\u540c\u4e13\u4e1a\u9886\u57df\u7684\u4e13\u4e1a\u4ee3\u7406\uff0c\u5e76\u5e0c\u671b\u81ea\u52a8\u5c06\u67e5\u8be2\u5f15\u5bfc\u5230\u6b63\u786e\u7684\u4e13\u5bb6\u65f6\uff0c\u8fd9\u79cd\u6a21\u5f0f\u7279\u522b\u6709\u7528\u3002"}),"\n",(0,o.jsx)(e.h3,{id:"1-\u521b\u5efa\u591a\u8bed\u8a00\u56e2\u961f",children:"1. \u521b\u5efa\u591a\u8bed\u8a00\u56e2\u961f"}),"\n",(0,o.jsxs)(e.p,{children:["\u521b\u5efa\u4e00\u4e2a\u6587\u4ef6",(0,o.jsx)(e.code,{children:"multi_language_team.py"})]}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'from agno.agent import Agent\nfrom agno.models.anthropic import Claude\nfrom agno.models.deepseek import DeepSeek\nfrom agno.models.mistral.mistral import MistralChat\nfrom agno.models.openai import OpenAIChat\nfrom agno.team.team import Team\n\nenglish_agent = Agent(\n    name="English Agent",\n    role="You can only answer in English",\n    model=OpenAIChat(id="gpt-4.5-preview"),\n    instructions=[\\\n        "You must only respond in English",\\\n    ],\n)\n\njapanese_agent = Agent(\n    name="Japanese Agent",\n    role="You can only answer in Japanese",\n    model=DeepSeek(id="deepseek-chat"),\n    instructions=[\\\n        "You must only respond in Japanese",\\\n    ],\n)\nchinese_agent = Agent(\n    name="Chinese Agent",\n    role="You can only answer in Chinese",\n    model=DeepSeek(id="deepseek-chat"),\n    instructions=[\\\n        "You must only respond in Chinese",\\\n    ],\n)\nspanish_agent = Agent(\n    name="Spanish Agent",\n    role="You can only answer in Spanish",\n    model=OpenAIChat(id="gpt-4.5-preview"),\n    instructions=[\\\n        "You must only respond in Spanish",\\\n    ],\n)\n\nfrench_agent = Agent(\n    name="French Agent",\n    role="You can only answer in French",\n    model=MistralChat(id="mistral-large-latest"),\n    instructions=[\\\n        "You must only respond in French",\\\n    ],\n)\n\ngerman_agent = Agent(\n    name="German Agent",\n    role="You can only answer in German",\n    model=Claude("claude-3-5-sonnet-20241022"),\n    instructions=[\\\n        "You must only respond in German",\\\n    ],\n)\nmulti_language_team = Team(\n    name="Multi Language Team",\n    mode="route",\n    model=OpenAIChat("gpt-4.5-preview"),\n    members=[\\\n        english_agent,\\\n        spanish_agent,\\\n        japanese_agent,\\\n        french_agent,\\\n        german_agent,\\\n        chinese_agent,\\\n    ],\n    show_tool_calls=True,\n    markdown=True,\n    instructions=[\\\n        "You are a language router that directs questions to the appropriate language agent.",\\\n        "If the user asks in a language whose agent is not a team member, respond in English with:",\\\n        "\'I can only answer in the following languages: English, Spanish, Japanese, French and German. Please ask your question in one of these languages.\'",\\\n        "Always check the language of the user\'s input before routing to an agent.",\\\n        "For unsupported languages like Italian, respond in English with the above message.",\\\n    ],\n    show_members_responses=True,\n)\n\n\n# \u7528\u6240\u6709\u652f\u6301\u7684\u8bed\u8a00\u95ee"\u4f60\u597d\u5417\uff1f"\nmulti_language_team.print_response(\n    "How are you?", stream=True  # \u82f1\u8bed\n)\n\nmulti_language_team.print_response(\n    "\u4f60\u597d\u5417\uff1f", stream=True  # \u4e2d\u6587\n)\n\nmulti_language_team.print_response(\n    "\u304a\u5143\u6c17\u3067\u3059\u304b?", stream=True  # \u65e5\u8bed\n)\n\nmulti_language_team.print_response(\n    "Comment allez-vous?",\n    stream=True,  # \u6cd5\u8bed\n)\n'})}),"\n",(0,o.jsx)(e.h3,{id:"2-\u8fd0\u884c\u56e2\u961f",children:"2. \u8fd0\u884c\u56e2\u961f"}),"\n",(0,o.jsx)(e.p,{children:"\u5b89\u88c5\u5e93"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"pip install openai mistral agno\n"})}),"\n",(0,o.jsx)(e.p,{children:"\u8fd0\u884c\u56e2\u961f"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-bash",children:"python multi_language_team.py\n"})}),"\n",(0,o.jsx)(e.h2,{id:"\u8def\u7531\u6a21\u5f0f\u7684\u7ed3\u6784\u5316\u8f93\u51fa",children:"\u8def\u7531\u6a21\u5f0f\u7684\u7ed3\u6784\u5316\u8f93\u51fa"}),"\n",(0,o.jsx)(e.p,{children:"\u8def\u7531\u6a21\u5f0f\u7684\u4e00\u4e2a\u5f3a\u5927\u529f\u80fd\u662f\u5b83\u80fd\u591f\u7ef4\u62a4\u6765\u81ea\u6210\u5458\u4ee3\u7406\u7684\u7ed3\u6784\u5316\u8f93\u51fa\u3002\u5f53\u4f7f\u7528Pydantic\u6a21\u578b\u4f5c\u4e3a\u54cd\u5e94\u65f6\uff0c\u6765\u81ea\u9009\u5b9a\u56e2\u961f\u6210\u5458\u7684\u54cd\u5e94\u5c06\u81ea\u52a8\u89e3\u6790\u4e3a\u6307\u5b9a\u7684\u7ed3\u6784\u3002"}),"\n",(0,o.jsx)(e.h3,{id:"\u5b9a\u4e49\u7ed3\u6784\u5316\u8f93\u51fa\u6a21\u578b",children:"\u5b9a\u4e49\u7ed3\u6784\u5316\u8f93\u51fa\u6a21\u578b"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{className:"language-python",children:'from pydantic import BaseModel\nfrom typing import List, Optional\nfrom agno.agent import Agent\nfrom agno.models.openai import OpenAIChat\nfrom agno.team import Team\n\n\nclass StockAnalysis(BaseModel):\n    symbol: str\n    company_name: str\n    analysis: str\n\nclass CompanyAnalysis(BaseModel):\n    company_name: str\n    analysis: str\n\nstock_searcher = Agent(\n    name="Stock Searcher",\n    model=OpenAIChat("gpt-4o"),\n    response_model=StockAnalysis,\n    role="Searches for information on stocks and provides price analysis.",\n    tools=[\\\n        YFinanceTools(\\\n            stock_price=True,\\\n            analyst_recommendations=True,\\\n        )\\\n    ],\n)\n\ncompany_info_agent = Agent(\n    name="Company Info Searcher",\n    model=OpenAIChat("gpt-4o"),\n    role="Searches for information about companies and recent news.",\n    response_model=CompanyAnalysis,\n    tools=[\\\n        YFinanceTools(\\\n            stock_price=False,\\\n            company_info=True,\\\n            company_news=True,\\\n        )\\\n    ],\n)\n\nteam = Team(\n    name="Stock Research Team",\n    mode="route",\n    model=OpenAIChat("gpt-4o"),\n    members=[stock_searcher, company_info_agent],\n    markdown=True,\n)\n\n# \u8fd9\u5e94\u8be5\u8def\u7531\u5230stock_searcher\nresponse = team.run("NVDA\u7684\u5f53\u524d\u80a1\u4ef7\u662f\u591a\u5c11\uff1f")\nassert isinstance(response.content, StockAnalysis)\n'})})]})}function p(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,o.jsx)(e,{...n,children:(0,o.jsx)(m,{...n})}):m(n)}}}]);