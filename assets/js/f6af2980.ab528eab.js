"use strict";(self.webpackChunknotes_3=self.webpackChunknotes_3||[]).push([[35741],{20285:(n,e,r)=>{r.r(e),r.d(e,{assets:()=>a,contentTitle:()=>d,default:()=>o,frontMatter:()=>s,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"Rust/Trait\u8be6\u89e3","title":"Rust Trait \u8be6\u89e3","description":"\ud83d\udcda \u4ec0\u4e48\u662f Trait\uff1f","source":"@site/docs/Rust/Trait\u8be6\u89e3.md","sourceDirName":"Rust","slug":"/Rust/Trait\u8be6\u89e3","permalink":"/notes3/docs/Rust/Trait\u8be6\u89e3","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Rust/Trait\u8be6\u89e3.md","tags":[],"version":"current","frontMatter":{},"sidebar":"rust","previous":{"title":"Rust \u6570\u636e\u4e0e\u56fe\u8868\u8d44\u6e90","permalink":"/notes3/docs/Rust/Rust\u6570\u636e\u4e0e\u56fe\u8868\u8d44\u6e90"},"next":{"title":"Unsafe Rust \u8be6\u89e3","permalink":"/notes3/docs/Rust/Unsafe Rust\u8be6\u89e3"}}');var l=r(23420),t=r(54213);const s={},d="Rust Trait \u8be6\u89e3",a={},c=[{value:"\ud83d\udcda \u4ec0\u4e48\u662f Trait\uff1f",id:"-\u4ec0\u4e48\u662f-trait",level:2},{value:"\u6838\u5fc3\u6982\u5ff5",id:"\u6838\u5fc3\u6982\u5ff5",level:3},{value:"\u4e0e\u5176\u4ed6\u8bed\u8a00\u7684\u5bf9\u6bd4",id:"\u4e0e\u5176\u4ed6\u8bed\u8a00\u7684\u5bf9\u6bd4",level:3},{value:"\ud83c\udfaf \u57fa\u7840\u7528\u6cd5",id:"-\u57fa\u7840\u7528\u6cd5",level:2},{value:"1. \u5b9a\u4e49 Trait",id:"1-\u5b9a\u4e49-trait",level:3},{value:"2. \u4e3a\u7c7b\u578b\u5b9e\u73b0 Trait",id:"2-\u4e3a\u7c7b\u578b\u5b9e\u73b0-trait",level:3},{value:"3. \u4f7f\u7528 Trait",id:"3-\u4f7f\u7528-trait",level:3},{value:"\ud83d\udd27 \u9ed8\u8ba4\u5b9e\u73b0",id:"-\u9ed8\u8ba4\u5b9e\u73b0",level:2},{value:"\u9ed8\u8ba4\u5b9e\u73b0\u8c03\u7528\u5176\u4ed6\u65b9\u6cd5",id:"\u9ed8\u8ba4\u5b9e\u73b0\u8c03\u7528\u5176\u4ed6\u65b9\u6cd5",level:3},{value:"\ud83d\udce6 Trait \u4f5c\u4e3a\u53c2\u6570",id:"-trait-\u4f5c\u4e3a\u53c2\u6570",level:2},{value:"1. impl Trait \u8bed\u6cd5\uff08\u8bed\u6cd5\u7cd6\uff09",id:"1-impl-trait-\u8bed\u6cd5\u8bed\u6cd5\u7cd6",level:3},{value:"2. Trait Bound \u8bed\u6cd5\uff08\u5b8c\u6574\u5f62\u5f0f\uff09",id:"2-trait-bound-\u8bed\u6cd5\u5b8c\u6574\u5f62\u5f0f",level:3},{value:"3. \u591a\u4e2a\u53c2\u6570\u7684\u573a\u666f",id:"3-\u591a\u4e2a\u53c2\u6570\u7684\u573a\u666f",level:3},{value:"\ud83c\udfa8 \u591a\u91cd\u7ea6\u675f",id:"-\u591a\u91cd\u7ea6\u675f",level:2},{value:"1. \u4f7f\u7528 + \u7ec4\u5408\u591a\u4e2a Trait",id:"1-\u4f7f\u7528--\u7ec4\u5408\u591a\u4e2a-trait",level:3},{value:"2. where \u5b50\u53e5\uff08\u63d0\u9ad8\u53ef\u8bfb\u6027\uff09",id:"2-where-\u5b50\u53e5\u63d0\u9ad8\u53ef\u8bfb\u6027",level:3},{value:"\ud83d\udd04 \u8fd4\u56de\u5b9e\u73b0\u4e86 Trait \u7684\u7c7b\u578b",id:"-\u8fd4\u56de\u5b9e\u73b0\u4e86-trait-\u7684\u7c7b\u578b",level:2},{value:"1. \u57fa\u672c\u7528\u6cd5",id:"1-\u57fa\u672c\u7528\u6cd5",level:3},{value:"2. \u9650\u5236\uff1a\u53ea\u80fd\u8fd4\u56de\u5355\u4e00\u7c7b\u578b",id:"2-\u9650\u5236\u53ea\u80fd\u8fd4\u56de\u5355\u4e00\u7c7b\u578b",level:3},{value:"\ud83d\udccc \u5b64\u513f\u89c4\u5219\uff08Orphan Rule\uff09",id:"-\u5b64\u513f\u89c4\u5219orphan-rule",level:2},{value:"\ud83e\uddec \u6761\u4ef6\u5b9e\u73b0",id:"-\u6761\u4ef6\u5b9e\u73b0",level:2},{value:"1. \u4e3a\u6ee1\u8db3\u7279\u5b9a\u7ea6\u675f\u7684\u7c7b\u578b\u5b9e\u73b0\u65b9\u6cd5",id:"1-\u4e3a\u6ee1\u8db3\u7279\u5b9a\u7ea6\u675f\u7684\u7c7b\u578b\u5b9e\u73b0\u65b9\u6cd5",level:3},{value:"2. Blanket Implementation\uff08\u8986\u76d6\u5b9e\u73b0\uff09",id:"2-blanket-implementation\u8986\u76d6\u5b9e\u73b0",level:3},{value:"\ud83c\udfad Trait \u5bf9\u8c61\u4e0e\u52a8\u6001\u5206\u53d1",id:"-trait-\u5bf9\u8c61\u4e0e\u52a8\u6001\u5206\u53d1",level:2},{value:"1. \u4ec0\u4e48\u662f Trait \u5bf9\u8c61\uff1f",id:"1-\u4ec0\u4e48\u662f-trait-\u5bf9\u8c61",level:3},{value:"2. \u4f7f\u7528\u573a\u666f\uff1a\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b",id:"2-\u4f7f\u7528\u573a\u666f\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b",level:3},{value:"3. \u9759\u6001\u5206\u53d1 vs \u52a8\u6001\u5206\u53d1",id:"3-\u9759\u6001\u5206\u53d1-vs-\u52a8\u6001\u5206\u53d1",level:3},{value:"\ud83d\udd2c \u5173\u8054\u7c7b\u578b\uff08Associated Types\uff09",id:"-\u5173\u8054\u7c7b\u578bassociated-types",level:2},{value:"1. \u57fa\u672c\u7528\u6cd5",id:"1-\u57fa\u672c\u7528\u6cd5-1",level:3},{value:"2. \u5173\u8054\u7c7b\u578b vs \u6cdb\u578b",id:"2-\u5173\u8054\u7c7b\u578b-vs-\u6cdb\u578b",level:3},{value:"\ud83c\udfaf \u5e38\u7528\u6807\u51c6\u5e93 Trait",id:"-\u5e38\u7528\u6807\u51c6\u5e93-trait",level:2},{value:"1. Debug - \u8c03\u8bd5\u8f93\u51fa",id:"1-debug---\u8c03\u8bd5\u8f93\u51fa",level:3},{value:"2. Clone - \u514b\u9686",id:"2-clone---\u514b\u9686",level:3},{value:"3. Copy - \u6309\u4f4d\u590d\u5236",id:"3-copy---\u6309\u4f4d\u590d\u5236",level:3},{value:"4. PartialEq \u548c Eq - \u76f8\u7b49\u6bd4\u8f83",id:"4-partialeq-\u548c-eq---\u76f8\u7b49\u6bd4\u8f83",level:3},{value:"5. PartialOrd \u548c Ord - \u6392\u5e8f\u6bd4\u8f83",id:"5-partialord-\u548c-ord---\u6392\u5e8f\u6bd4\u8f83",level:3},{value:"\ud83d\udcdd \u603b\u7ed3",id:"-\u603b\u7ed3",level:2},{value:"Trait \u7684\u6838\u5fc3\u4ef7\u503c",id:"trait-\u7684\u6838\u5fc3\u4ef7\u503c",level:3},{value:"\u6700\u4f73\u5b9e\u8df5",id:"\u6700\u4f73\u5b9e\u8df5",level:3},{value:"\ud83d\ude80 \u9ad8\u7ea7\u7279\u6027",id:"-\u9ad8\u7ea7\u7279\u6027",level:2},{value:"1. Supertraits\uff08\u7236 Trait\uff09",id:"1-supertraits\u7236-trait",level:3},{value:"2. \u5b8c\u5168\u9650\u5b9a\u8bed\u6cd5\uff08Fully Qualified Syntax\uff09",id:"2-\u5b8c\u5168\u9650\u5b9a\u8bed\u6cd5fully-qualified-syntax",level:3},{value:"3. Newtype \u6a21\u5f0f\u7ed5\u8fc7\u5b64\u513f\u89c4\u5219",id:"3-newtype-\u6a21\u5f0f\u7ed5\u8fc7\u5b64\u513f\u89c4\u5219",level:3},{value:"4. \u8fd0\u7b97\u7b26\u91cd\u8f7d",id:"4-\u8fd0\u7b97\u7b26\u91cd\u8f7d",level:3},{value:"5. \u9ed8\u8ba4\u6cdb\u578b\u7c7b\u578b\u53c2\u6570",id:"5-\u9ed8\u8ba4\u6cdb\u578b\u7c7b\u578b\u53c2\u6570",level:3},{value:"\ud83c\udf93 \u5b9e\u6218\u793a\u4f8b",id:"-\u5b9e\u6218\u793a\u4f8b",level:2},{value:"\u793a\u4f8b 1: \u81ea\u5b9a\u4e49 Display",id:"\u793a\u4f8b-1-\u81ea\u5b9a\u4e49-display",level:3},{value:"\u793a\u4f8b 2: \u6cdb\u578b\u51fd\u6570\u4e0e Trait Bound",id:"\u793a\u4f8b-2-\u6cdb\u578b\u51fd\u6570\u4e0e-trait-bound",level:3},{value:"\u793a\u4f8b 3: \u4f7f\u7528 Trait \u5bf9\u8c61\u5b9e\u73b0\u63d2\u4ef6\u7cfb\u7edf",id:"\u793a\u4f8b-3-\u4f7f\u7528-trait-\u5bf9\u8c61\u5b9e\u73b0\u63d2\u4ef6\u7cfb\u7edf",level:3},{value:"\ud83d\udcda \u5e38\u89c1\u95ee\u9898",id:"-\u5e38\u89c1\u95ee\u9898",level:2},{value:"Q1: \u4f55\u65f6\u4f7f\u7528 Trait\uff0c\u4f55\u65f6\u4f7f\u7528\u6cdb\u578b\uff1f",id:"q1-\u4f55\u65f6\u4f7f\u7528-trait\u4f55\u65f6\u4f7f\u7528\u6cdb\u578b",level:3},{value:"Q2: impl Trait vs Trait Bound\uff1f",id:"q2-impl-trait-vs-trait-bound",level:3},{value:"Q3: \u9759\u6001\u5206\u53d1 vs \u52a8\u6001\u5206\u53d1\u5982\u4f55\u9009\u62e9\uff1f",id:"q3-\u9759\u6001\u5206\u53d1-vs-\u52a8\u6001\u5206\u53d1\u5982\u4f55\u9009\u62e9",level:3},{value:"\ud83c\udfaf \u603b\u7ed3",id:"-\u603b\u7ed3-1",level:2}];function h(n){const e={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsx)(e.h1,{id:"rust-trait-\u8be6\u89e3",children:"Rust Trait \u8be6\u89e3"})}),"\n",(0,l.jsx)(e.h2,{id:"-\u4ec0\u4e48\u662f-trait",children:"\ud83d\udcda \u4ec0\u4e48\u662f Trait\uff1f"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"Trait\uff08\u7279\u5f81\uff09"})," \u662f Rust \u4e2d\u5b9a\u4e49\u5171\u4eab\u884c\u4e3a\u7684\u673a\u5236\uff0c\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u63a5\u53e3\uff08Interface\uff09\uff0c\u4f46\u529f\u80fd\u66f4\u5f3a\u5927\u3002"]}),"\n",(0,l.jsx)(e.h3,{id:"\u6838\u5fc3\u6982\u5ff5",children:"\u6838\u5fc3\u6982\u5ff5"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u2705 Trait \u5b9a\u4e49\u4e86\u4e00\u7ec4\u65b9\u6cd5\u7b7e\u540d"}),"\n",(0,l.jsx)(e.li,{children:"\u2705 \u4e0d\u540c\u7c7b\u578b\u53ef\u4ee5\u5b9e\u73b0\u76f8\u540c\u7684 Trait"}),"\n",(0,l.jsx)(e.li,{children:"\u2705 Trait \u662f Rust \u5b9e\u73b0\u591a\u6001\u7684\u4e3b\u8981\u65b9\u5f0f"}),"\n",(0,l.jsx)(e.li,{children:"\u2705 Trait \u53ef\u4ee5\u6709\u9ed8\u8ba4\u5b9e\u73b0"}),"\n",(0,l.jsx)(e.li,{children:"\u2705 Trait \u662f Rust \u7c7b\u578b\u7cfb\u7edf\u7684\u6838\u5fc3"}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"\u4e0e\u5176\u4ed6\u8bed\u8a00\u7684\u5bf9\u6bd4",children:"\u4e0e\u5176\u4ed6\u8bed\u8a00\u7684\u5bf9\u6bd4"}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"\u8bed\u8a00"}),(0,l.jsx)(e.th,{children:"\u6982\u5ff5"}),(0,l.jsx)(e.th,{children:"\u7279\u70b9"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.strong,{children:"Java/C#"})}),(0,l.jsx)(e.td,{children:"Interface"}),(0,l.jsx)(e.td,{children:"\u53ea\u80fd\u5b9a\u4e49\u65b9\u6cd5\u7b7e\u540d"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.strong,{children:"Go"})}),(0,l.jsx)(e.td,{children:"Interface"}),(0,l.jsx)(e.td,{children:"\u9690\u5f0f\u5b9e\u73b0"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.strong,{children:"Rust"})}),(0,l.jsx)(e.td,{children:"Trait"}),(0,l.jsx)(e.td,{children:"\u663e\u5f0f\u5b9e\u73b0 + \u9ed8\u8ba4\u65b9\u6cd5 + \u5173\u8054\u7c7b\u578b"})]})]})]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-\u57fa\u7840\u7528\u6cd5",children:"\ud83c\udfaf \u57fa\u7840\u7528\u6cd5"}),"\n",(0,l.jsx)(e.h3,{id:"1-\u5b9a\u4e49-trait",children:"1. \u5b9a\u4e49 Trait"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"// \u5b9a\u4e49\u4e00\u4e2a Summary trait\npub trait Summary {\n    fn summarize(&self) -> String;\n}\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u8bed\u6cd5\u8bf4\u660e"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.code,{children:"trait"})," \u5173\u952e\u5b57\u5b9a\u4e49 trait"]}),"\n",(0,l.jsxs)(e.li,{children:["\u65b9\u6cd5\u7b7e\u540d\u4ee5 ",(0,l.jsx)(e.code,{children:";"})," \u7ed3\u5c3e\uff08\u4e0d\u63d0\u4f9b\u5b9e\u73b0\uff09"]}),"\n",(0,l.jsx)(e.li,{children:"\u53ef\u4ee5\u5b9a\u4e49\u591a\u4e2a\u65b9\u6cd5"}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"2-\u4e3a\u7c7b\u578b\u5b9e\u73b0-trait",children:"2. \u4e3a\u7c7b\u578b\u5b9e\u73b0 Trait"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'pub struct Post {\n    pub title: String,\n    pub author: String,\n    pub content: String,\n}\n\npub struct Weibo {\n    pub username: String,\n    pub content: String,\n}\n\n// \u4e3a Post \u5b9e\u73b0 Summary\nimpl Summary for Post {\n    fn summarize(&self) -> String {\n        format!("\u6587\u7ae0\u300a{}\u300b, \u4f5c\u8005\u662f {}", self.title, self.author)\n    }\n}\n\n// \u4e3a Weibo \u5b9e\u73b0 Summary\nimpl Summary for Weibo {\n    fn summarize(&self) -> String {\n        format!("{} \u53d1\u8868\u4e86\u5fae\u535a: {}", self.username, self.content)\n    }\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u8bed\u6cd5"}),": ",(0,l.jsx)(e.code,{children:"impl TraitName for TypeName"})]}),"\n",(0,l.jsx)(e.h3,{id:"3-\u4f7f\u7528-trait",children:"3. \u4f7f\u7528 Trait"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'fn main() {\n    let post = Post {\n        title: "Rust \u5165\u95e8".to_string(),\n        author: "\u5f20\u4e09".to_string(),\n        content: "Rust \u5f88\u68d2\uff01".to_string(),\n    };\n\n    let weibo = Weibo {\n        username: "\u674e\u56db".to_string(),\n        content: "\u4eca\u5929\u5929\u6c14\u4e0d\u9519".to_string(),\n    };\n\n    println!("{}", post.summarize());\n    println!("{}", weibo.summarize());\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u8f93\u51fa"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"\u6587\u7ae0\u300aRust \u5165\u95e8\u300b, \u4f5c\u8005\u662f \u5f20\u4e09\n\u674e\u56db \u53d1\u8868\u4e86\u5fae\u535a: \u4eca\u5929\u5929\u6c14\u4e0d\u9519\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-\u9ed8\u8ba4\u5b9e\u73b0",children:"\ud83d\udd27 \u9ed8\u8ba4\u5b9e\u73b0"}),"\n",(0,l.jsx)(e.p,{children:"Trait \u53ef\u4ee5\u63d0\u4f9b\u65b9\u6cd5\u7684\u9ed8\u8ba4\u5b9e\u73b0\uff0c\u7c7b\u578b\u53ef\u4ee5\u9009\u62e9\u4f7f\u7528\u6216\u91cd\u5199\u3002"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'pub trait Summary {\n    // \u63d0\u4f9b\u9ed8\u8ba4\u5b9e\u73b0\n    fn summarize(&self) -> String {\n        String::from("(\u9605\u8bfb\u66f4\u591a...)")\n    }\n}\n\n// Post \u4f7f\u7528\u9ed8\u8ba4\u5b9e\u73b0\nimpl Summary for Post {}\n\n// Weibo \u91cd\u5199\u9ed8\u8ba4\u5b9e\u73b0\nimpl Summary for Weibo {\n    fn summarize(&self) -> String {\n        format!("{}: {}", self.username, self.content)\n    }\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"\u9ed8\u8ba4\u5b9e\u73b0\u8c03\u7528\u5176\u4ed6\u65b9\u6cd5",children:"\u9ed8\u8ba4\u5b9e\u73b0\u8c03\u7528\u5176\u4ed6\u65b9\u6cd5"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'pub trait Summary {\n    // \u9700\u8981\u5b9e\u73b0\u7684\u65b9\u6cd5\n    fn summarize_author(&self) -> String;\n\n    // \u9ed8\u8ba4\u5b9e\u73b0\uff0c\u8c03\u7528 summarize_author\n    fn summarize(&self) -> String {\n        format!("(\u9605\u8bfb\u66f4\u591a\u6765\u81ea {} \u7684\u5185\u5bb9...)", self.summarize_author())\n    }\n}\n\nimpl Summary for Weibo {\n    fn summarize_author(&self) -> String {\n        format!("@{}", self.username)\n    }\n}\n\nfn main() {\n    let weibo = Weibo {\n        username: "\u5f20\u4e09".to_string(),\n        content: "Hello".to_string(),\n    };\n    \n    println!("{}", weibo.summarize());\n    // \u8f93\u51fa: (\u9605\u8bfb\u66f4\u591a\u6765\u81ea @\u5f20\u4e09 \u7684\u5185\u5bb9...)\n}\n'})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-trait-\u4f5c\u4e3a\u53c2\u6570",children:"\ud83d\udce6 Trait \u4f5c\u4e3a\u53c2\u6570"}),"\n",(0,l.jsx)(e.h3,{id:"1-impl-trait-\u8bed\u6cd5\u8bed\u6cd5\u7cd6",children:"1. impl Trait \u8bed\u6cd5\uff08\u8bed\u6cd5\u7cd6\uff09"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'pub fn notify(item: &impl Summary) {\n    println!("Breaking news! {}", item.summarize());\n}\n\n// \u53ef\u4ee5\u4f20\u5165\u4efb\u4f55\u5b9e\u73b0\u4e86 Summary \u7684\u7c7b\u578b\nfn main() {\n    let post = Post { /* ... */ };\n    let weibo = Weibo { /* ... */ };\n    \n    notify(&post);   // \u2705\n    notify(&weibo);  // \u2705\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"2-trait-bound-\u8bed\u6cd5\u5b8c\u6574\u5f62\u5f0f",children:"2. Trait Bound \u8bed\u6cd5\uff08\u5b8c\u6574\u5f62\u5f0f\uff09"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'pub fn notify<T: Summary>(item: &T) {\n    println!("Breaking news! {}", item.summarize());\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u4e24\u79cd\u8bed\u6cd5\u5bf9\u6bd4"}),":"]}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"\u8bed\u6cd5"}),(0,l.jsx)(e.th,{children:"\u9002\u7528\u573a\u666f"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"impl Trait"})}),(0,l.jsx)(e.td,{children:"\u7b80\u5355\u573a\u666f\uff0c\u53c2\u6570\u7c7b\u578b\u53ef\u4ee5\u4e0d\u540c"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"Trait Bound"})}),(0,l.jsx)(e.td,{children:"\u590d\u6742\u573a\u666f\uff0c\u9700\u8981\u7ea6\u675f\u591a\u4e2a\u53c2\u6570\u4e3a\u540c\u4e00\u7c7b\u578b"})]})]})]}),"\n",(0,l.jsx)(e.h3,{id:"3-\u591a\u4e2a\u53c2\u6570\u7684\u573a\u666f",children:"3. \u591a\u4e2a\u53c2\u6570\u7684\u573a\u666f"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"// \u274c \u4e24\u4e2a\u53c2\u6570\u53ef\u4ee5\u662f\u4e0d\u540c\u7c7b\u578b\npub fn notify(item1: &impl Summary, item2: &impl Summary) {}\n\n// \u2705 \u4e24\u4e2a\u53c2\u6570\u5fc5\u987b\u662f\u76f8\u540c\u7c7b\u578b\npub fn notify<T: Summary>(item1: &T, item2: &T) {}\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-\u591a\u91cd\u7ea6\u675f",children:"\ud83c\udfa8 \u591a\u91cd\u7ea6\u675f"}),"\n",(0,l.jsx)(e.h3,{id:"1-\u4f7f\u7528--\u7ec4\u5408\u591a\u4e2a-trait",children:"1. \u4f7f\u7528 + \u7ec4\u5408\u591a\u4e2a Trait"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'use std::fmt::Display;\n\n// impl Trait \u5f62\u5f0f\npub fn notify(item: &(impl Summary + Display)) {\n    println!("{}", item);           // Display\n    println!("{}", item.summarize()); // Summary\n}\n\n// Trait Bound \u5f62\u5f0f\npub fn notify<T: Summary + Display>(item: &T) {\n    println!("{}", item);\n    println!("{}", item.summarize());\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"2-where-\u5b50\u53e5\u63d0\u9ad8\u53ef\u8bfb\u6027",children:"2. where \u5b50\u53e5\uff08\u63d0\u9ad8\u53ef\u8bfb\u6027\uff09"}),"\n",(0,l.jsxs)(e.p,{children:["\u5f53\u7ea6\u675f\u53d8\u5f97\u590d\u6742\u65f6\uff0c\u4f7f\u7528 ",(0,l.jsx)(e.code,{children:"where"})," \u5b50\u53e5\uff1a"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"// \u274c \u96be\u4ee5\u9605\u8bfb\nfn some_function<T: Display + Clone, U: Clone + Debug>(t: &T, u: &U) -> i32 {}\n\n// \u2705 \u6e05\u6670\u6613\u8bfb\nfn some_function<T, U>(t: &T, u: &U) -> i32\nwhere\n    T: Display + Clone,\n    U: Clone + Debug,\n{\n    // ...\n}\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-\u8fd4\u56de\u5b9e\u73b0\u4e86-trait-\u7684\u7c7b\u578b",children:"\ud83d\udd04 \u8fd4\u56de\u5b9e\u73b0\u4e86 Trait \u7684\u7c7b\u578b"}),"\n",(0,l.jsx)(e.h3,{id:"1-\u57fa\u672c\u7528\u6cd5",children:"1. \u57fa\u672c\u7528\u6cd5"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'fn returns_summarizable() -> impl Summary {\n    Weibo {\n        username: String::from("\u5f20\u4e09"),\n        content: String::from("Hello Rust!"),\n    }\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u4f18\u70b9"}),": \u9690\u85cf\u5177\u4f53\u7c7b\u578b\uff0c\u53ea\u66b4\u9732 trait \u63a5\u53e3"]}),"\n",(0,l.jsx)(e.h3,{id:"2-\u9650\u5236\u53ea\u80fd\u8fd4\u56de\u5355\u4e00\u7c7b\u578b",children:"2. \u9650\u5236\uff1a\u53ea\u80fd\u8fd4\u56de\u5355\u4e00\u7c7b\u578b"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"// \u274c \u7f16\u8bd1\u9519\u8bef\uff1a\u8fd4\u56de\u4e86\u4e24\u79cd\u4e0d\u540c\u7684\u7c7b\u578b\nfn returns_summarizable(switch: bool) -> impl Summary {\n    if switch {\n        Post { /* ... */ }\n    } else {\n        Weibo { /* ... */ }  // \u9519\u8bef\uff01\n    }\n}\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u89e3\u51b3\u65b9\u6848"}),": \u4f7f\u7528 Trait \u5bf9\u8c61\uff08\u4e0b\u4e00\u8282\uff09"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-\u5b64\u513f\u89c4\u5219orphan-rule",children:"\ud83d\udccc \u5b64\u513f\u89c4\u5219\uff08Orphan Rule\uff09"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u89c4\u5219"}),": \u5982\u679c\u4f60\u60f3\u4e3a\u7c7b\u578b ",(0,l.jsx)(e.code,{children:"A"})," \u5b9e\u73b0 trait ",(0,l.jsx)(e.code,{children:"T"}),"\uff0c\u90a3\u4e48 ",(0,l.jsx)(e.code,{children:"A"})," \u6216 ",(0,l.jsx)(e.code,{children:"T"})," \u81f3\u5c11\u6709\u4e00\u4e2a\u5fc5\u987b\u5728\u5f53\u524d\u4f5c\u7528\u57df\u4e2d\u5b9a\u4e49\u3002"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"// \u2705 \u5141\u8bb8\uff1aPost \u662f\u672c\u5730\u7c7b\u578b\nimpl Summary for Post {}\n\n// \u2705 \u5141\u8bb8\uff1aSummary \u662f\u672c\u5730 trait\nimpl Summary for String {}\n\n// \u274c \u7981\u6b62\uff1aDisplay \u548c String \u90fd\u662f\u5916\u90e8\u7684\nimpl Display for String {}  // \u7f16\u8bd1\u9519\u8bef\uff01\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u76ee\u7684"}),": \u9632\u6b62\u4e0d\u540c crate \u4e4b\u95f4\u7684\u5b9e\u73b0\u51b2\u7a81"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-\u6761\u4ef6\u5b9e\u73b0",children:"\ud83e\uddec \u6761\u4ef6\u5b9e\u73b0"}),"\n",(0,l.jsx)(e.h3,{id:"1-\u4e3a\u6ee1\u8db3\u7279\u5b9a\u7ea6\u675f\u7684\u7c7b\u578b\u5b9e\u73b0\u65b9\u6cd5",children:"1. \u4e3a\u6ee1\u8db3\u7279\u5b9a\u7ea6\u675f\u7684\u7c7b\u578b\u5b9e\u73b0\u65b9\u6cd5"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'use std::fmt::Display;\n\nstruct Pair<T> {\n    x: T,\n    y: T,\n}\n\n// \u6240\u6709 Pair<T> \u90fd\u6709 new \u65b9\u6cd5\nimpl<T> Pair<T> {\n    fn new(x: T, y: T) -> Self {\n        Self { x, y }\n    }\n}\n\n// \u53ea\u6709 T \u5b9e\u73b0\u4e86 Display + PartialOrd \u7684 Pair<T> \u624d\u6709 cmp_display\nimpl<T: Display + PartialOrd> Pair<T> {\n    fn cmp_display(&self) {\n        if self.x >= self.y {\n            println!("\u6700\u5927\u7684\u662f x = {}", self.x);\n        } else {\n            println!("\u6700\u5927\u7684\u662f y = {}", self.y);\n        }\n    }\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"2-blanket-implementation\u8986\u76d6\u5b9e\u73b0",children:"2. Blanket Implementation\uff08\u8986\u76d6\u5b9e\u73b0\uff09"}),"\n",(0,l.jsx)(e.p,{children:"\u4e3a\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u7c7b\u578b\u5b9e\u73b0 trait\uff1a"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"// \u6807\u51c6\u5e93\u4e2d\u7684\u4f8b\u5b50\nimpl<T: Display> ToString for T {\n    fn to_string(&self) -> String {\n        // ...\n    }\n}\n\n// \u56e0\u6b64\u6240\u6709\u5b9e\u73b0\u4e86 Display \u7684\u7c7b\u578b\u90fd\u81ea\u52a8\u6709 to_string \u65b9\u6cd5\nlet s = 3.to_string();  // i32 \u5b9e\u73b0\u4e86 Display\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-trait-\u5bf9\u8c61\u4e0e\u52a8\u6001\u5206\u53d1",children:"\ud83c\udfad Trait \u5bf9\u8c61\u4e0e\u52a8\u6001\u5206\u53d1"}),"\n",(0,l.jsx)(e.h3,{id:"1-\u4ec0\u4e48\u662f-trait-\u5bf9\u8c61",children:"1. \u4ec0\u4e48\u662f Trait \u5bf9\u8c61\uff1f"}),"\n",(0,l.jsxs)(e.p,{children:["Trait \u5bf9\u8c61\u5141\u8bb8\u5728\u8fd0\u884c\u65f6\u5904\u7406\u4e0d\u540c\u7c7b\u578b\uff0c\u4f7f\u7528 ",(0,l.jsx)(e.code,{children:"dyn"})," \u5173\u952e\u5b57\uff1a"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"// \u9759\u6001\u5206\u53d1\uff08\u7f16\u8bd1\u65f6\u786e\u5b9a\u7c7b\u578b\uff09\nfn notify<T: Summary>(item: &T) {}\n\n// \u52a8\u6001\u5206\u53d1\uff08\u8fd0\u884c\u65f6\u786e\u5b9a\u7c7b\u578b\uff09\nfn notify(item: &dyn Summary) {}\n"})}),"\n",(0,l.jsx)(e.h3,{id:"2-\u4f7f\u7528\u573a\u666f\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b",children:"2. \u4f7f\u7528\u573a\u666f\uff1a\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'pub trait Draw {\n    fn draw(&self);\n}\n\nstruct Button {\n    width: u32,\n    height: u32,\n}\n\nstruct TextField {\n    text: String,\n}\n\nimpl Draw for Button {\n    fn draw(&self) {\n        println!("\u7ed8\u5236\u6309\u94ae");\n    }\n}\n\nimpl Draw for TextField {\n    fn draw(&self) {\n        println!("\u7ed8\u5236\u6587\u672c\u6846");\n    }\n}\n\n// \u4f7f\u7528 trait \u5bf9\u8c61\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\nstruct Screen {\n    components: Vec<Box<dyn Draw>>,\n}\n\nimpl Screen {\n    fn run(&self) {\n        for component in self.components.iter() {\n            component.draw();\n        }\n    }\n}\n\nfn main() {\n    let screen = Screen {\n        components: vec![\n            Box::new(Button { width: 50, height: 10 }),\n            Box::new(TextField { text: String::from("Hello") }),\n        ],\n    };\n    \n    screen.run();\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"3-\u9759\u6001\u5206\u53d1-vs-\u52a8\u6001\u5206\u53d1",children:"3. \u9759\u6001\u5206\u53d1 vs \u52a8\u6001\u5206\u53d1"}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"\u7279\u6027"}),(0,l.jsx)(e.th,{children:"\u9759\u6001\u5206\u53d1"}),(0,l.jsx)(e.th,{children:"\u52a8\u6001\u5206\u53d1"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.strong,{children:"\u8bed\u6cd5"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"<T: Trait>"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"&dyn Trait"})})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.strong,{children:"\u6027\u80fd"})}),(0,l.jsx)(e.td,{children:"\u5feb\uff08\u7f16\u8bd1\u65f6\u5355\u6001\u5316\uff09"}),(0,l.jsx)(e.td,{children:"\u6162\uff08\u8fd0\u884c\u65f6\u67e5\u627e vtable\uff09"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.strong,{children:"\u4ee3\u7801\u5927\u5c0f"})}),(0,l.jsx)(e.td,{children:"\u5927\uff08\u6bcf\u4e2a\u7c7b\u578b\u751f\u6210\u4ee3\u7801\uff09"}),(0,l.jsx)(e.td,{children:"\u5c0f"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.strong,{children:"\u7075\u6d3b\u6027"})}),(0,l.jsx)(e.td,{children:"\u4f4e\uff08\u7f16\u8bd1\u65f6\u786e\u5b9a\uff09"}),(0,l.jsx)(e.td,{children:"\u9ad8\uff08\u8fd0\u884c\u65f6\u786e\u5b9a\uff09"})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.strong,{children:"\u4f7f\u7528\u573a\u666f"})}),(0,l.jsx)(e.td,{children:"\u7c7b\u578b\u5df2\u77e5"}),(0,l.jsx)(e.td,{children:"\u7c7b\u578b\u672a\u77e5\u6216\u96c6\u5408\u5b58\u50a8"})]})]})]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-\u5173\u8054\u7c7b\u578bassociated-types",children:"\ud83d\udd2c \u5173\u8054\u7c7b\u578b\uff08Associated Types\uff09"}),"\n",(0,l.jsx)(e.p,{children:"\u5173\u8054\u7c7b\u578b\u5141\u8bb8\u5728 trait \u4e2d\u5b9a\u4e49\u7c7b\u578b\u5360\u4f4d\u7b26\uff0c\u5728\u5b9e\u73b0\u65f6\u6307\u5b9a\u5177\u4f53\u7c7b\u578b\u3002"}),"\n",(0,l.jsx)(e.h3,{id:"1-\u57fa\u672c\u7528\u6cd5-1",children:"1. \u57fa\u672c\u7528\u6cd5"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"pub trait Iterator {\n    type Item;  // \u5173\u8054\u7c7b\u578b\n    \n    fn next(&mut self) -> Option<Self::Item>;\n}\n\n// \u5b9e\u73b0\u65f6\u6307\u5b9a Item \u7684\u5177\u4f53\u7c7b\u578b\nimpl Iterator for Counter {\n    type Item = u32;\n    \n    fn next(&mut self) -> Option<Self::Item> {\n        // ...\n    }\n}\n"})}),"\n",(0,l.jsx)(e.h3,{id:"2-\u5173\u8054\u7c7b\u578b-vs-\u6cdb\u578b",children:"2. \u5173\u8054\u7c7b\u578b vs \u6cdb\u578b"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"// \u4f7f\u7528\u6cdb\u578b\uff1a\u53ef\u4ee5\u4e3a\u540c\u4e00\u7c7b\u578b\u5b9e\u73b0\u591a\u6b21\npub trait Iterator<T> {\n    fn next(&mut self) -> Option<T>;\n}\n\nimpl Iterator<u32> for Counter {}\nimpl Iterator<String> for Counter {}  // \u53ef\u4ee5\u5b9e\u73b0\u591a\u6b21\n\n// \u4f7f\u7528\u5173\u8054\u7c7b\u578b\uff1a\u53ea\u80fd\u5b9e\u73b0\u4e00\u6b21\npub trait Iterator {\n    type Item;\n    fn next(&mut self) -> Option<Self::Item>;\n}\n\nimpl Iterator for Counter {\n    type Item = u32;  // \u53ea\u80fd\u6307\u5b9a\u4e00\u6b21\n}\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u4f55\u65f6\u4f7f\u7528\u5173\u8054\u7c7b\u578b"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u5f53\u4e00\u4e2a\u7c7b\u578b\u53ea\u5e94\u8be5\u6709\u4e00\u79cd\u5b9e\u73b0\u65f6"}),"\n",(0,l.jsx)(e.li,{children:"\u7b80\u5316 API\uff0c\u8c03\u7528\u8005\u4e0d\u9700\u8981\u6307\u5b9a\u7c7b\u578b\u53c2\u6570"}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-\u5e38\u7528\u6807\u51c6\u5e93-trait",children:"\ud83c\udfaf \u5e38\u7528\u6807\u51c6\u5e93 Trait"}),"\n",(0,l.jsx)(e.h3,{id:"1-debug---\u8c03\u8bd5\u8f93\u51fa",children:"1. Debug - \u8c03\u8bd5\u8f93\u51fa"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'#[derive(Debug)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let p = Point { x: 1, y: 2 };\n    println!("{:?}", p);   // Point { x: 1, y: 2 }\n    println!("{:#?}", p);  // \u7f8e\u5316\u8f93\u51fa\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"2-clone---\u514b\u9686",children:"2. Clone - \u514b\u9686"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'#[derive(Clone)]\nstruct MyStruct {\n    data: String,\n}\n\nfn main() {\n    let s1 = MyStruct { data: String::from("hello") };\n    let s2 = s1.clone();  // \u6df1\u62f7\u8d1d\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"3-copy---\u6309\u4f4d\u590d\u5236",children:"3. Copy - \u6309\u4f4d\u590d\u5236"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'#[derive(Copy, Clone)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\nfn main() {\n    let p1 = Point { x: 1, y: 2 };\n    let p2 = p1;  // \u590d\u5236\uff0cp1 \u4ecd\u7136\u6709\u6548\n    println!("{} {}", p1.x, p2.x);\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u6ce8\u610f"}),": Copy \u53ea\u80fd\u7528\u4e8e\u6808\u4e0a\u7684\u7b80\u5355\u7c7b\u578b"]}),"\n",(0,l.jsx)(e.h3,{id:"4-partialeq-\u548c-eq---\u76f8\u7b49\u6bd4\u8f83",children:"4. PartialEq \u548c Eq - \u76f8\u7b49\u6bd4\u8f83"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'#[derive(PartialEq, Eq)]\nstruct Book {\n    title: String,\n    pages: u32,\n}\n\nfn main() {\n    let book1 = Book { title: "Rust".to_string(), pages: 500 };\n    let book2 = Book { title: "Rust".to_string(), pages: 500 };\n    \n    assert_eq!(book1, book2);\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"5-partialord-\u548c-ord---\u6392\u5e8f\u6bd4\u8f83",children:"5. PartialOrd \u548c Ord - \u6392\u5e8f\u6bd4\u8f83"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"#[derive(PartialEq, Eq, PartialOrd, Ord)]\nstruct Person {\n    age: u32,\n}\n\nfn main() {\n    let p1 = Person { age: 20 };\n    let p2 = Person { age: 30 };\n    \n    assert!(p1 < p2);\n}\n"})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-\u603b\u7ed3",children:"\ud83d\udcdd \u603b\u7ed3"}),"\n",(0,l.jsx)(e.h3,{id:"trait-\u7684\u6838\u5fc3\u4ef7\u503c",children:"Trait \u7684\u6838\u5fc3\u4ef7\u503c"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\u62bd\u8c61\u884c\u4e3a"})," - \u5b9a\u4e49\u5171\u4eab\u7684\u63a5\u53e3"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\u591a\u6001"})," - \u4e0d\u540c\u7c7b\u578b\u5b9e\u73b0\u76f8\u540c\u884c\u4e3a"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\u6cdb\u578b\u7ea6\u675f"})," - \u9650\u5236\u6cdb\u578b\u7c7b\u578b\u7684\u80fd\u529b"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\u4ee3\u7801\u590d\u7528"})," - \u9ed8\u8ba4\u5b9e\u73b0\u548c blanket implementation"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\u7c7b\u578b\u5b89\u5168"})," - \u7f16\u8bd1\u65f6\u68c0\u67e5"]}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"\u6700\u4f73\u5b9e\u8df5",children:"\u6700\u4f73\u5b9e\u8df5"}),"\n",(0,l.jsxs)(e.p,{children:["\u2705 ",(0,l.jsx)(e.strong,{children:"\u4f18\u5148\u4f7f\u7528\u9759\u6001\u5206\u53d1"})," - \u6027\u80fd\u66f4\u597d",(0,l.jsx)(e.br,{}),"\n","\u2705 ",(0,l.jsx)(e.strong,{children:"\u5408\u7406\u4f7f\u7528\u9ed8\u8ba4\u5b9e\u73b0"})," - \u51cf\u5c11\u91cd\u590d\u4ee3\u7801",(0,l.jsx)(e.br,{}),"\n","\u2705 ",(0,l.jsx)(e.strong,{children:"\u4f7f\u7528 where \u5b50\u53e5"})," - \u63d0\u9ad8\u590d\u6742\u7ea6\u675f\u7684\u53ef\u8bfb\u6027",(0,l.jsx)(e.br,{}),"\n","\u2705 ",(0,l.jsx)(e.strong,{children:"\u9075\u5b88\u5b64\u513f\u89c4\u5219"})," - \u907f\u514d\u5b9e\u73b0\u51b2\u7a81",(0,l.jsx)(e.br,{}),"\n","\u2705 ",(0,l.jsx)(e.strong,{children:"\u5584\u7528 derive"})," - \u81ea\u52a8\u5b9e\u73b0\u5e38\u7528 trait"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-\u9ad8\u7ea7\u7279\u6027",children:"\ud83d\ude80 \u9ad8\u7ea7\u7279\u6027"}),"\n",(0,l.jsx)(e.h3,{id:"1-supertraits\u7236-trait",children:"1. Supertraits\uff08\u7236 Trait\uff09"}),"\n",(0,l.jsx)(e.p,{children:"\u6709\u65f6\u4e00\u4e2a trait \u9700\u8981\u4f9d\u8d56\u53e6\u4e00\u4e2a trait \u7684\u529f\u80fd\uff1a"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'use std::fmt;\n\n// OutlinePrint \u4f9d\u8d56 Display\ntrait OutlinePrint: fmt::Display {\n    fn outline_print(&self) {\n        let output = self.to_string();  // \u4f7f\u7528 Display \u7684 to_string\n        let len = output.len();\n        println!("{}", "*".repeat(len + 4));\n        println!("*{}*", " ".repeat(len + 2));\n        println!("* {} *", output);\n        println!("*{}*", " ".repeat(len + 2));\n        println!("{}", "*".repeat(len + 4));\n    }\n}\n\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\n// \u5fc5\u987b\u5148\u5b9e\u73b0 Display\nimpl fmt::Display for Point {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, "({}, {})", self.x, self.y)\n    }\n}\n\n// \u7136\u540e\u624d\u80fd\u5b9e\u73b0 OutlinePrint\nimpl OutlinePrint for Point {}\n\nfn main() {\n    let p = Point { x: 1, y: 3 };\n    p.outline_print();\n    // \u8f93\u51fa:\n    // **********\n    // *        *\n    // * (1, 3) *\n    // *        *\n    // **********\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"2-\u5b8c\u5168\u9650\u5b9a\u8bed\u6cd5fully-qualified-syntax",children:"2. \u5b8c\u5168\u9650\u5b9a\u8bed\u6cd5\uff08Fully Qualified Syntax\uff09"}),"\n",(0,l.jsx)(e.p,{children:"\u5f53\u591a\u4e2a trait \u6709\u540c\u540d\u65b9\u6cd5\u65f6\uff0c\u9700\u8981\u660e\u786e\u6307\u5b9a\u8c03\u7528\u54ea\u4e2a\uff1a"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'trait Pilot {\n    fn fly(&self);\n}\n\ntrait Wizard {\n    fn fly(&self);\n}\n\nstruct Human;\n\nimpl Pilot for Human {\n    fn fly(&self) {\n        println!("\u673a\u957f\u8bf4\u8bdd\u4e86");\n    }\n}\n\nimpl Wizard for Human {\n    fn fly(&self) {\n        println!("\u98de\u8d77\u6765\uff01");\n    }\n}\n\nimpl Human {\n    fn fly(&self) {\n        println!("*\u75af\u72c2\u6325\u821e\u624b\u81c2*");\n    }\n}\n\nfn main() {\n    let person = Human;\n\n    // \u9ed8\u8ba4\u8c03\u7528\u7c7b\u578b\u81ea\u5df1\u7684\u65b9\u6cd5\n    person.fly();  // *\u75af\u72c2\u6325\u821e\u624b\u81c2*\n\n    // \u660e\u786e\u6307\u5b9a\u8c03\u7528\u54ea\u4e2a trait \u7684\u65b9\u6cd5\n    Pilot::fly(&person);   // \u673a\u957f\u8bf4\u8bdd\u4e86\n    Wizard::fly(&person);  // \u98de\u8d77\u6765\uff01\n\n    // \u5b8c\u5168\u9650\u5b9a\u8bed\u6cd5\n    <Human as Pilot>::fly(&person);  // \u673a\u957f\u8bf4\u8bdd\u4e86\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u5173\u8054\u51fd\u6570\u7684\u5b8c\u5168\u9650\u5b9a\u8bed\u6cd5"}),":"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'trait Animal {\n    fn baby_name() -> String;\n}\n\nstruct Dog;\n\nimpl Dog {\n    fn baby_name() -> String {\n        String::from("Spot")\n    }\n}\n\nimpl Animal for Dog {\n    fn baby_name() -> String {\n        String::from("puppy")\n    }\n}\n\nfn main() {\n    // \u8c03\u7528 Dog \u81ea\u5df1\u7684\u5173\u8054\u51fd\u6570\n    println!("{}", Dog::baby_name());  // Spot\n\n    // \u5b8c\u5168\u9650\u5b9a\u8bed\u6cd5\u8c03\u7528 trait \u7684\u5173\u8054\u51fd\u6570\n    println!("{}", <Dog as Animal>::baby_name());  // puppy\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"3-newtype-\u6a21\u5f0f\u7ed5\u8fc7\u5b64\u513f\u89c4\u5219",children:"3. Newtype \u6a21\u5f0f\u7ed5\u8fc7\u5b64\u513f\u89c4\u5219"}),"\n",(0,l.jsx)(e.p,{children:"\u4f7f\u7528\u5143\u7ec4\u7ed3\u6784\u4f53\u5305\u88c5\u5916\u90e8\u7c7b\u578b\uff0c\u4ece\u800c\u4e3a\u5176\u5b9e\u73b0\u5916\u90e8 trait\uff1a"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'use std::fmt;\n\n// \u5305\u88c5 Vec<String>\nstruct Wrapper(Vec<String>);\n\n// \u73b0\u5728\u53ef\u4ee5\u4e3a Wrapper \u5b9e\u73b0 Display\nimpl fmt::Display for Wrapper {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, "[{}]", self.0.join(", "))\n    }\n}\n\nfn main() {\n    let w = Wrapper(vec![\n        String::from("hello"),\n        String::from("world"),\n    ]);\n    println!("w = {}", w);  // w = [hello, world]\n}\n'})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u7f3a\u70b9"}),": Wrapper \u4e0d\u4f1a\u81ea\u52a8\u62e5\u6709 Vec \u7684\u65b9\u6cd5"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u89e3\u51b3\u65b9\u6848"}),": \u5b9e\u73b0 ",(0,l.jsx)(e.code,{children:"Deref"})," trait"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'use std::ops::Deref;\n\nimpl Deref for Wrapper {\n    type Target = Vec<String>;\n\n    fn deref(&self) -> &Self::Target {\n        &self.0\n    }\n}\n\nfn main() {\n    let w = Wrapper(vec![String::from("hello")]);\n    println!("\u957f\u5ea6: {}", w.len());  // \u53ef\u4ee5\u8c03\u7528 Vec \u7684\u65b9\u6cd5\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"4-\u8fd0\u7b97\u7b26\u91cd\u8f7d",children:"4. \u8fd0\u7b97\u7b26\u91cd\u8f7d"}),"\n",(0,l.jsxs)(e.p,{children:["\u901a\u8fc7\u5b9e\u73b0 ",(0,l.jsx)(e.code,{children:"std::ops"})," \u4e2d\u7684 trait \u6765\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff1a"]}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"use std::ops::Add;\n\n#[derive(Debug, Copy, Clone, PartialEq)]\nstruct Point {\n    x: i32,\n    y: i32,\n}\n\n// \u91cd\u8f7d + \u8fd0\u7b97\u7b26\nimpl Add for Point {\n    type Output = Point;\n\n    fn add(self, other: Point) -> Point {\n        Point {\n            x: self.x + other.x,\n            y: self.y + other.y,\n        }\n    }\n}\n\nfn main() {\n    let p1 = Point { x: 1, y: 0 };\n    let p2 = Point { x: 2, y: 3 };\n    let p3 = p1 + p2;  // \u4f7f\u7528 + \u8fd0\u7b97\u7b26\n\n    assert_eq!(p3, Point { x: 3, y: 3 });\n}\n"})}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u5e38\u7528\u7684\u53ef\u91cd\u8f7d\u8fd0\u7b97\u7b26"}),":"]}),"\n",(0,l.jsxs)(e.table,{children:[(0,l.jsx)(e.thead,{children:(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.th,{children:"Trait"}),(0,l.jsx)(e.th,{children:"\u8fd0\u7b97\u7b26"}),(0,l.jsx)(e.th,{children:"\u793a\u4f8b"})]})}),(0,l.jsxs)(e.tbody,{children:[(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"Add"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"+"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"a + b"})})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"Sub"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"-"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"a - b"})})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"Mul"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"*"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"a * b"})})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"Div"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"/"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"a / b"})})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"Rem"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"%"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"a % b"})})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"Neg"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"-"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"-a"})})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"Not"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"!"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"!a"})})]}),(0,l.jsxs)(e.tr,{children:[(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"Index"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"[]"})}),(0,l.jsx)(e.td,{children:(0,l.jsx)(e.code,{children:"a[i]"})})]})]})]}),"\n",(0,l.jsx)(e.h3,{id:"5-\u9ed8\u8ba4\u6cdb\u578b\u7c7b\u578b\u53c2\u6570",children:"5. \u9ed8\u8ba4\u6cdb\u578b\u7c7b\u578b\u53c2\u6570"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'use std::ops::Add;\n\n// Add trait \u7684\u5b9a\u4e49\ntrait Add<Rhs=Self> {  // Rhs \u9ed8\u8ba4\u4e3a Self\n    type Output;\n    fn add(self, rhs: Rhs) -> Self::Output;\n}\n\n// \u81ea\u5b9a\u4e49 Rhs \u7c7b\u578b\nstruct Millimeters(u32);\nstruct Meters(u32);\n\nimpl Add<Meters> for Millimeters {\n    type Output = Millimeters;\n\n    fn add(self, other: Meters) -> Millimeters {\n        Millimeters(self.0 + (other.0 * 1000))\n    }\n}\n\nfn main() {\n    let mm = Millimeters(1000);\n    let m = Meters(1);\n    let total = mm + m;  // Millimeters + Meters\n    println!("{}", total.0);  // 2000\n}\n'})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-\u5b9e\u6218\u793a\u4f8b",children:"\ud83c\udf93 \u5b9e\u6218\u793a\u4f8b"}),"\n",(0,l.jsx)(e.h3,{id:"\u793a\u4f8b-1-\u81ea\u5b9a\u4e49-display",children:"\u793a\u4f8b 1: \u81ea\u5b9a\u4e49 Display"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'use std::fmt;\n\n#[derive(Debug)]\nenum FileState {\n    Open,\n    Closed,\n}\n\nstruct File {\n    name: String,\n    state: FileState,\n}\n\nimpl fmt::Display for FileState {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        match self {\n            FileState::Open => write!(f, "OPEN"),\n            FileState::Closed => write!(f, "CLOSED"),\n        }\n    }\n}\n\nimpl fmt::Display for File {\n    fn fmt(&self, f: &mut fmt::Formatter) -> fmt::Result {\n        write!(f, "<{} ({})>", self.name, self.state)\n    }\n}\n\nfn main() {\n    let f = File {\n        name: String::from("data.txt"),\n        state: FileState::Open,\n    };\n\n    println!("{:?}", f);  // Debug \u8f93\u51fa\n    println!("{}", f);    // Display \u8f93\u51fa: <data.txt (OPEN)>\n}\n'})}),"\n",(0,l.jsx)(e.h3,{id:"\u793a\u4f8b-2-\u6cdb\u578b\u51fd\u6570\u4e0e-trait-bound",children:"\u793a\u4f8b 2: \u6cdb\u578b\u51fd\u6570\u4e0e Trait Bound"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"use std::cmp::PartialOrd;\n\nfn largest<T: PartialOrd + Copy>(list: &[T]) -> T {\n    let mut largest = list[0];\n\n    for &item in list.iter() {\n        if item > largest {\n            largest = item;\n        }\n    }\n\n    largest\n}\n\nfn main() {\n    let numbers = vec![34, 50, 25, 100, 65];\n    let result = largest(&numbers);\n    println!(\"\u6700\u5927\u503c: {}\", result);\n\n    let chars = vec!['y', 'm', 'a', 'q'];\n    let result = largest(&chars);\n    println!(\"\u6700\u5927\u5b57\u7b26: {}\", result);\n}\n"})}),"\n",(0,l.jsx)(e.h3,{id:"\u793a\u4f8b-3-\u4f7f\u7528-trait-\u5bf9\u8c61\u5b9e\u73b0\u63d2\u4ef6\u7cfb\u7edf",children:"\u793a\u4f8b 3: \u4f7f\u7528 Trait \u5bf9\u8c61\u5b9e\u73b0\u63d2\u4ef6\u7cfb\u7edf"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:'trait Plugin {\n    fn name(&self) -> &str;\n    fn execute(&self);\n}\n\nstruct LoggerPlugin;\nstruct CachePlugin;\n\nimpl Plugin for LoggerPlugin {\n    fn name(&self) -> &str {\n        "Logger"\n    }\n\n    fn execute(&self) {\n        println!("\u8bb0\u5f55\u65e5\u5fd7...");\n    }\n}\n\nimpl Plugin for CachePlugin {\n    fn name(&self) -> &str {\n        "Cache"\n    }\n\n    fn execute(&self) {\n        println!("\u6e05\u7406\u7f13\u5b58...");\n    }\n}\n\nstruct PluginManager {\n    plugins: Vec<Box<dyn Plugin>>,\n}\n\nimpl PluginManager {\n    fn new() -> Self {\n        PluginManager {\n            plugins: Vec::new(),\n        }\n    }\n\n    fn register(&mut self, plugin: Box<dyn Plugin>) {\n        self.plugins.push(plugin);\n    }\n\n    fn run_all(&self) {\n        for plugin in &self.plugins {\n            println!("\u8fd0\u884c\u63d2\u4ef6: {}", plugin.name());\n            plugin.execute();\n        }\n    }\n}\n\nfn main() {\n    let mut manager = PluginManager::new();\n    manager.register(Box::new(LoggerPlugin));\n    manager.register(Box::new(CachePlugin));\n\n    manager.run_all();\n}\n'})}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-\u5e38\u89c1\u95ee\u9898",children:"\ud83d\udcda \u5e38\u89c1\u95ee\u9898"}),"\n",(0,l.jsx)(e.h3,{id:"q1-\u4f55\u65f6\u4f7f\u7528-trait\u4f55\u65f6\u4f7f\u7528\u6cdb\u578b",children:"Q1: \u4f55\u65f6\u4f7f\u7528 Trait\uff0c\u4f55\u65f6\u4f7f\u7528\u6cdb\u578b\uff1f"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u4f7f\u7528 Trait"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u5b9a\u4e49\u5171\u4eab\u884c\u4e3a"}),"\n",(0,l.jsx)(e.li,{children:"\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u7ea6\u675f"}),"\n",(0,l.jsx)(e.li,{children:"\u5b9e\u73b0\u591a\u6001"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u4f7f\u7528\u6cdb\u578b"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u7f16\u5199\u53ef\u590d\u7528\u7684\u4ee3\u7801"}),"\n",(0,l.jsx)(e.li,{children:"\u907f\u514d\u4ee3\u7801\u91cd\u590d"}),"\n",(0,l.jsx)(e.li,{children:"\u9700\u8981\u7c7b\u578b\u53c2\u6570\u5316"}),"\n"]}),"\n",(0,l.jsx)(e.h3,{id:"q2-impl-trait-vs-trait-bound",children:"Q2: impl Trait vs Trait Bound\uff1f"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{className:"language-rust",children:"// impl Trait - \u7b80\u6d01\uff0c\u9002\u5408\u7b80\u5355\u573a\u666f\nfn foo(x: impl Display) {}\n\n// Trait Bound - \u7075\u6d3b\uff0c\u9002\u5408\u590d\u6742\u573a\u666f\nfn foo<T: Display>(x: T) {}\n"})}),"\n",(0,l.jsx)(e.h3,{id:"q3-\u9759\u6001\u5206\u53d1-vs-\u52a8\u6001\u5206\u53d1\u5982\u4f55\u9009\u62e9",children:"Q3: \u9759\u6001\u5206\u53d1 vs \u52a8\u6001\u5206\u53d1\u5982\u4f55\u9009\u62e9\uff1f"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u9759\u6001\u5206\u53d1"})," (",(0,l.jsx)(e.code,{children:"<T: Trait>"}),"):"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u2705 \u6027\u80fd\u597d"}),"\n",(0,l.jsx)(e.li,{children:"\u2705 \u7f16\u8bd1\u65f6\u4f18\u5316"}),"\n",(0,l.jsx)(e.li,{children:"\u274c \u4ee3\u7801\u81a8\u80c0"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u52a8\u6001\u5206\u53d1"})," (",(0,l.jsx)(e.code,{children:"&dyn Trait"}),"):"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u2705 \u4ee3\u7801\u5c0f"}),"\n",(0,l.jsx)(e.li,{children:"\u2705 \u8fd0\u884c\u65f6\u7075\u6d3b"}),"\n",(0,l.jsx)(e.li,{children:"\u274c \u6027\u80fd\u5f00\u9500"}),"\n"]}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"\u9009\u62e9\u5efa\u8bae"}),":"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"\u9ed8\u8ba4\u4f7f\u7528\u9759\u6001\u5206\u53d1"}),"\n",(0,l.jsx)(e.li,{children:"\u9700\u8981\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u65f6\u4f7f\u7528\u52a8\u6001\u5206\u53d1"}),"\n"]}),"\n",(0,l.jsx)(e.hr,{}),"\n",(0,l.jsx)(e.h2,{id:"-\u603b\u7ed3-1",children:"\ud83c\udfaf \u603b\u7ed3"}),"\n",(0,l.jsx)(e.p,{children:"Trait \u662f Rust \u6700\u5f3a\u5927\u7684\u7279\u6027\u4e4b\u4e00\uff0c\u5b83\u63d0\u4f9b\u4e86\uff1a"}),"\n",(0,l.jsxs)(e.ol,{children:["\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\u62bd\u8c61\u80fd\u529b"})," - \u5b9a\u4e49\u5171\u4eab\u884c\u4e3a"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\u591a\u6001\u652f\u6301"})," - \u9759\u6001\u548c\u52a8\u6001\u5206\u53d1"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\u7c7b\u578b\u7ea6\u675f"})," - \u6cdb\u578b\u8fb9\u754c"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\u4ee3\u7801\u590d\u7528"})," - \u9ed8\u8ba4\u5b9e\u73b0\u548c blanket implementation"]}),"\n",(0,l.jsxs)(e.li,{children:[(0,l.jsx)(e.strong,{children:"\u7c7b\u578b\u5b89\u5168"})," - \u7f16\u8bd1\u65f6\u68c0\u67e5"]}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"\u638c\u63e1 Trait \u662f\u6210\u4e3a Rust \u9ad8\u624b\u7684\u5fc5\u7ecf\u4e4b\u8def\uff01\ud83e\udd80"})]})}function o(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(h,{...n})}):h(n)}},54213:(n,e,r)=>{r.d(e,{R:()=>s,x:()=>d});var i=r(36672);const l={},t=i.createContext(l);function s(n){const e=i.useContext(t);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function d(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(l):n.components||l:s(n.components),i.createElement(t.Provider,{value:e},n.children)}}}]);