"use strict";(self.webpackChunknotes_3=self.webpackChunknotes_3||[]).push([[7736],{54213:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>s});var t=n(36672);const i={},o=t.createContext(i);function a(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function s(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),t.createElement(o.Provider,{value:r},e.children)}},63596:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"JVM/Libraries/Http\u5ba2\u6237\u7aef/Retrofit2","title":"Retrofit2","description":"\u7b80\u4ecb","source":"@site/docs/JVM/Libraries/Http\u5ba2\u6237\u7aef/Retrofit2.mdx","sourceDirName":"JVM/Libraries/Http\u5ba2\u6237\u7aef","slug":"/JVM/Libraries/Http\u5ba2\u6237\u7aef/Retrofit2","permalink":"/notes3/docs/JVM/Libraries/Http\u5ba2\u6237\u7aef/Retrofit2","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/JVM/Libraries/Http\u5ba2\u6237\u7aef/Retrofit2.mdx","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"jvmEcosystem","previous":{"title":"Http\u5ba2\u6237\u7aef","permalink":"/notes3/docs/category/http\u5ba2\u6237\u7aef"},"next":{"title":"IoC","permalink":"/notes3/docs/category/ioc"}}');var i=n(23420),o=n(54213);const a={sidebar_position:1},s=void 0,c={},d=[{value:"\u7b80\u4ecb",id:"\u7b80\u4ecb",level:2},{value:"\u5b89\u88c5",id:"\u5b89\u88c5",level:2},{value:"\u7aef\u70b9\u58f0\u660e",id:"\u7aef\u70b9\u58f0\u660e",level:2},{value:"\u4f7f\u7528",id:"\u4f7f\u7528",level:2},{value:"\u62e6\u622a\u5668",id:"\u62e6\u622a\u5668",level:2},{value:"\u516c\u5171\u8bf7\u6c42\u5934",id:"\u516c\u5171\u8bf7\u6c42\u5934",level:3},{value:"\u5f02\u5e38\u5904\u7406",id:"\u5f02\u5e38\u5904\u7406",level:3}];function l(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.h2,{id:"\u7b80\u4ecb",children:"\u7b80\u4ecb"}),"\n",(0,i.jsxs)(r.p,{children:[(0,i.jsx)(r.a,{href:"https://github.com/square/retrofit",children:"retrofit"}),"\u7528\u4e8e\u5b9e\u73b0\u7c7b\u578b\u5b89\u5168\u58f0\u660e\u5f0f",(0,i.jsx)(r.code,{children:"HTTP"}),"\u5ba2\u6237\u7aef,\u5b83\u5c06",(0,i.jsx)(r.code,{children:"RESTful"}),"\u8bf7\u6c42\u8f6c\u6362\u4e3a",(0,i.jsx)(r.code,{children:"Java"}),"\u63a5\u53e3,\u5e76\u4f7f\u7528\r\n",(0,i.jsx)(r.code,{children:"OkHttp"}),"\u5e93\u53d1\u9001\u7f51\u7edc\u8bf7\u6c42."]}),"\n",(0,i.jsx)(r.h2,{id:"\u5b89\u88c5",children:"\u5b89\u88c5"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-xml",children:"<dependency>\r\n    <groupId>com.github.mrmike</groupId>\r\n    <artifactId>ok2curl</artifactId>\r\n    <version>0.8.0</version>\r\n</dependency>\r\n\x3c!-- https://mvnrepository.com/artifact/com.squareup.okhttp3/okhttp --\x3e\r\n<dependency>\r\n    <groupId>com.squareup.okhttp3</groupId>\r\n    <artifactId>okhttp</artifactId>\r\n    <version>4.12.0</version>\r\n</dependency>\r\n<dependency>\r\n    <groupId>com.squareup.retrofit2</groupId>\r\n    <artifactId>retrofit</artifactId>\r\n    <version>2.11.0</version>\r\n    <exclusions>\r\n        <exclusion>\r\n            <groupId>com.squareup.okhttp3</groupId>\r\n            <artifactId>okhttp</artifactId>\r\n        </exclusion>\r\n    </exclusions>\r\n</dependency>\n"})}),"\n",(0,i.jsx)(r.h2,{id:"\u7aef\u70b9\u58f0\u660e",children:"\u7aef\u70b9\u58f0\u660e"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-kotlin",children:'interface RetrofitExample {\r\n\r\n\r\n    @POST("/v2/video/generate")\r\n    fun createAvatarVideo(\r\n        @Body body: CreateAvatarVideoPayloads\r\n    ): Call<HeygenApiReturns<CreateAvatarVideoData>>\r\n\r\n\r\n    @GET("/v1/video_status.get")\r\n    fun retrieveVideo(@Query("video_id") videoId: String): Call<HeygenApiReturns<RetrieveVideoData>>\r\n\r\n    @GET("/v1/{path}")\r\n    fun testPath(@Path("path") path: String): Call<HeygenApiReturns<RetrieveVideoData>>\r\n\r\n    @POST("audio/transcriptions")\r\n    @Multipart\r\n    fun speechToText(\r\n        @Part file: MultipartBody.Part,\r\n        @Part("model") model: RequestBody,\r\n        @Part("language") language: RequestBody? = null,\r\n        @Part("prompt") prompt: RequestBody? = null,\r\n        @Part("response_format") responseFormat: RequestBody? = null,\r\n        @Part("temperature") temperature: RequestBody? = null,\r\n        @Part("timestamp_granularities") timestampGranularities: List<String>? = null,\r\n    ): Call<String>\r\n}\r\n\n'})}),"\n",(0,i.jsx)(r.h2,{id:"\u4f7f\u7528",children:"\u4f7f\u7528"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-kotlin",children:'fun videoEndpoints(apiKey: String, block: HeygenVideoEndpoints.() -> Unit) = retrofit {\r\n    baseUrl("https://api.heygen.com/")\r\n    client(createHttpClient {\r\n        addInterceptorBefore(CurlInterceptor::class.java, HeaderInterceptor(apiKey))\r\n        addInterceptor(ExceptionInterceptor())\r\n        autoDetectProxy()\r\n    })\r\n}.create(HeygenVideoEndpoints::class.java).block()\r\n\r\n\r\nvideoEndpoints("MDc0ODc0M2M5Y2ViNDE0MjlhZjA3NmE5OTgxYzc3OGMtMTcyNzM1MjAwMg==") {\r\n    retrieveVideo("8725603dc8e240be830bfd2592ac8a67").execute().body().print()\r\n}\n'})}),"\n",(0,i.jsx)(r.h2,{id:"\u62e6\u622a\u5668",children:"\u62e6\u622a\u5668"}),"\n",(0,i.jsx)(r.h3,{id:"\u516c\u5171\u8bf7\u6c42\u5934",children:"\u516c\u5171\u8bf7\u6c42\u5934"}),"\n",(0,i.jsxs)(r.p,{children:["\u6709\u4e9b\u63a5\u53e3\u9700\u8981\u516c\u5171\u8bf7\u6c42\u5934,\u6bd4\u5982",(0,i.jsx)(r.code,{children:"Authorization"})]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-kotlin",children:'class HeaderInterceptor(private val apiKey: String) : Interceptor {\r\n    override fun intercept(chain: Interceptor.Chain): Response {\r\n        val originalRequest = chain.request()\r\n        val requestBuilder = originalRequest.newBuilder()\r\n            .header("Content-Type", "application/json")\r\n            .header("Accept", "application/json")\r\n            .header("X-Api-Key", apiKey)\r\n        val request = requestBuilder.build()\r\n        return chain.proceed(request)\r\n    }\r\n}\n'})}),"\n",(0,i.jsx)(r.h3,{id:"\u5f02\u5e38\u5904\u7406",children:"\u5f02\u5e38\u5904\u7406"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{className:"language-kotlin",children:'class ExceptionInterceptor : Interceptor {\r\n    override fun intercept(chain: Interceptor.Chain): Response {\r\n        val request = chain.request()\r\n        val response = chain.proceed(request)\r\n        response.raiseForStatus {\r\n            0 to (this.body?.string() ?: "heygen error")\r\n        }\r\n        return response\r\n    }\r\n}\n'})})]})}function p(e={}){const{wrapper:r}={...(0,o.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);