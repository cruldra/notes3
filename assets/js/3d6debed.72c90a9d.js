"use strict";(self.webpackChunknotes_3=self.webpackChunknotes_3||[]).push([[2490],{54213:(n,e,o)=>{o.d(e,{R:()=>i,x:()=>p});var t=o(36672);const s={},r=t.createContext(s);function i(n){const e=t.useContext(r);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function p(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(s):n.components||s:i(n.components),t.createElement(r.Provider,{value:e},n.children)}},85673:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>p,default:()=>d,frontMatter:()=>i,metadata:()=>t,toc:()=>a});const t=JSON.parse('{"id":"AI/Agno/\u5de5\u5177/\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1","title":"\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1","description":"\u5982\u4f55\u5728Agno\u5de5\u5177\u4e2d\u5b9e\u73b0\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1","source":"@site/docs/AI/Agno/\u5de5\u5177/\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1.mdx","sourceDirName":"AI/Agno/\u5de5\u5177","slug":"/AI/Agno/\u5de5\u5177/\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1","permalink":"/notes3/docs/AI/Agno/\u5de5\u5177/\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/AI/Agno/\u5de5\u5177/\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1.mdx","tags":[],"version":"current","frontMatter":{"title":"\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1","description":"\u5982\u4f55\u5728Agno\u5de5\u5177\u4e2d\u5b9e\u73b0\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1"},"sidebar":"ai","previous":{"title":"\u4ecb\u7ecd","permalink":"/notes3/docs/AI/Agno/\u5de5\u5177/\u4ecb\u7ecd"},"next":{"title":"\u524d\u7f6e\u548c\u540e\u7f6e\u94a9\u5b50","permalink":"/notes3/docs/AI/Agno/\u5de5\u5177/\u524d\u7f6e\u540e\u7f6e\u94a9\u5b50"}}');var s=o(23420),r=o(54213);const i={title:"\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1",description:"\u5982\u4f55\u5728Agno\u5de5\u5177\u4e2d\u5b9e\u73b0\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1"},p="\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1",c={},a=[{value:"\u793a\u4f8b\uff1a\u4f7f\u7528\u524d\u7f6e\u94a9\u5b50\u5b9e\u73b0\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1",id:"\u793a\u4f8b\u4f7f\u7528\u524d\u7f6e\u94a9\u5b50\u5b9e\u73b0\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1",level:2}];function l(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.header,{children:(0,s.jsx)(e.h1,{id:"\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1",children:"\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1"})}),"\n",(0,s.jsx)(e.p,{children:"\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1\uff08Human in the loop\uff0cHITL\uff09\u8ba9\u60a8\u53ef\u4ee5\u5728\u6267\u884c\u5de5\u5177\u8c03\u7528\u524d\u6216\u540e\u83b7\u53d6\u7528\u6237\u8f93\u5165\u3002"}),"\n",(0,s.jsx)(e.p,{children:"\u4ee5\u4e0b\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u4f7f\u7528\u524d\u7f6e\u94a9\u5b50\u5728\u6267\u884c\u5de5\u5177\u8c03\u7528\u524d\u83b7\u53d6\u7528\u6237\u786e\u8ba4\u3002\u5f53\u7136\uff0c\u6211\u4eec\u4e5f\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5728\u540e\u7f6e\u94a9\u5b50\u4e2d\u5b9e\u73b0\u540c\u6837\u7684\u529f\u80fd\u3002"}),"\n",(0,s.jsx)(e.h2,{id:"\u793a\u4f8b\u4f7f\u7528\u524d\u7f6e\u94a9\u5b50\u5b9e\u73b0\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1",children:"\u793a\u4f8b\uff1a\u4f7f\u7528\u524d\u7f6e\u94a9\u5b50\u5b9e\u73b0\u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1"}),"\n",(0,s.jsx)(e.p,{children:"\u6b64\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\uff1a"}),"\n",(0,s.jsxs)(e.ul,{children:["\n",(0,s.jsx)(e.li,{children:"\u4e3a\u5de5\u5177\u6dfb\u52a0\u524d\u7f6e\u94a9\u5b50\u4ee5\u83b7\u53d6\u7528\u6237\u786e\u8ba4"}),"\n",(0,s.jsx)(e.li,{children:"\u5728\u5de5\u5177\u6267\u884c\u671f\u95f4\u5904\u7406\u7528\u6237\u8f93\u5165"}),"\n",(0,s.jsx)(e.li,{children:"\u6839\u636e\u7528\u6237\u9009\u62e9\u4f18\u96c5\u5730\u53d6\u6d88\u64cd\u4f5c"}),"\n"]}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:'"""\ud83e\udd1d \u4ee5\u4eba\u4e3a\u672c\u7684\u8bbe\u8ba1\uff1a\u4e3a\u5de5\u5177\u8c03\u7528\u6dfb\u52a0\u7528\u6237\u786e\u8ba4\n\n\u6b64\u793a\u4f8b\u5c55\u793a\u4e86\u5982\u4f55\u5728Agno\u5de5\u5177\u4e2d\u5b9e\u73b0\u4ee5\u4eba\u4e3a\u672c\u7684\u529f\u80fd\u3002\n\u5b83\u5c55\u793a\u4e86\u5982\u4f55\uff1a\n- \u4e3a\u5de5\u5177\u6dfb\u52a0\u524d\u7f6e\u94a9\u5b50\u4ee5\u83b7\u53d6\u7528\u6237\u786e\u8ba4\n- \u5728\u5de5\u5177\u6267\u884c\u671f\u95f4\u5904\u7406\u7528\u6237\u8f93\u5165\n- \u6839\u636e\u7528\u6237\u9009\u62e9\u4f18\u96c5\u5730\u53d6\u6d88\u64cd\u4f5c\n\n\u4e00\u4e9b\u5b9e\u9645\u5e94\u7528\uff1a\n- \u5728\u6267\u884c\u654f\u611f\u64cd\u4f5c\u524d\u8fdb\u884c\u786e\u8ba4\n- \u5728\u8fdb\u884cAPI\u8c03\u7528\u524d\u8fdb\u884c\u5ba1\u67e5\n- \u9a8c\u8bc1\u6570\u636e\u8f6c\u6362\n- \u5728\u5173\u952e\u7cfb\u7edf\u4e2d\u6279\u51c6\u81ea\u52a8\u5316\u64cd\u4f5c\n\n\u8fd0\u884c `pip install openai httpx rich agno` \u5b89\u88c5\u4f9d\u8d56\u9879\u3002\n"""\n\nimport json\nfrom typing import Iterator\n\nimport httpx\nfrom agno.agent import Agent\nfrom agno.exceptions import StopAgentRun\nfrom agno.models.openai import OpenAIChat\nfrom agno.tools import FunctionCall, tool\nfrom rich.console import Console\nfrom rich.pretty import pprint\nfrom rich.prompt import Prompt\n\n# \u8fd9\u662fprint_response\u65b9\u6cd5\u4f7f\u7528\u7684\u63a7\u5236\u53f0\u5b9e\u4f8b\n# \u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5b83\u6765\u505c\u6b62\u548c\u91cd\u65b0\u542f\u52a8\u5b9e\u65f6\u663e\u793a\uff0c\u5e76\u8bf7\u6c42\u7528\u6237\u786e\u8ba4\nconsole = Console()\n\n\ndef pre_hook(fc: FunctionCall):\n    # \u4ece\u63a7\u5236\u53f0\u83b7\u53d6\u5b9e\u65f6\u663e\u793a\u5b9e\u4f8b\n    live = console._live\n\n    # \u6682\u65f6\u505c\u6b62\u5b9e\u65f6\u663e\u793a\uff0c\u4ee5\u4fbf\u6211\u4eec\u53ef\u4ee5\u8bf7\u6c42\u7528\u6237\u786e\u8ba4\n    live.stop()  # type: ignore\n\n    # \u8bf7\u6c42\u786e\u8ba4\n    console.print(f"\\n\u5373\u5c06\u8fd0\u884c [bold blue]{fc.function.name}[/]")\n    message = (\n        Prompt.ask("\u60a8\u60f3\u7ee7\u7eed\u5417\uff1f", choices=["y", "n"], default="y")\n        .strip()\n        .lower()\n    )\n\n    # \u91cd\u65b0\u542f\u52a8\u5b9e\u65f6\u663e\u793a\n    live.start()  # type: ignore\n\n    # \u5982\u679c\u7528\u6237\u4e0d\u60f3\u7ee7\u7eed\uff0c\u629b\u51faStopExecution\u5f02\u5e38\n    if message != "y":\n        raise StopAgentRun(\n            "\u7528\u6237\u53d6\u6d88\u4e86\u5de5\u5177\u8c03\u7528",\n            agent_message="\u7531\u4e8e\u672a\u83b7\u5f97\u8bb8\u53ef\uff0c\u505c\u6b62\u6267\u884c\u3002",\n        )\n\n\n@tool(pre_hook=pre_hook)\ndef get_top_hackernews_stories(num_stories: int) -> Iterator[str]:\n    """\u5728\u7528\u6237\u786e\u8ba4\u540e\u4eceHacker News\u83b7\u53d6\u70ed\u95e8\u6545\u4e8b\u3002\n\n    Args:\n        num_stories (int): \u8981\u68c0\u7d22\u7684\u6545\u4e8b\u6570\u91cf\n\n    Returns:\n        str: \u5305\u542b\u6545\u4e8b\u8be6\u60c5\u7684JSON\u5b57\u7b26\u4e32\n    """\n    # \u83b7\u53d6\u70ed\u95e8\u6545\u4e8bID\n    response = httpx.get("https://hacker-news.firebaseio.com/v0/topstories.json")\n    story_ids = response.json()\n\n    # \u751f\u6210\u6545\u4e8b\u8be6\u60c5\n    for story_id in story_ids[:num_stories]:\n        story_response = httpx.get(\n            f"https://hacker-news.firebaseio.com/v0/item/{story_id}.json"\n        )\n        story = story_response.json()\n        if "text" in story:\n            story.pop("text", None)\n        yield json.dumps(story)\n\n\n# \u521d\u59cb\u5316\u5177\u6709\u6280\u672f\u654f\u611f\u6027\u683c\u548c\u660e\u786e\u6307\u4ee4\u7684\u4ee3\u7406\nagent = Agent(\n    model=OpenAIChat(id="gpt-4o-mini"),\n    tools=[get_top_hackernews_stories],\n    markdown=True,\n)\n\nagent.print_response(\n    "\u83b7\u53d6\u524d2\u4e2ahackernews\u70ed\u95e8\u6545\u4e8b\uff1f", stream=True, console=console\n)\n'})})]})}function d(n={}){const{wrapper:e}={...(0,r.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}}}]);