"use strict";(self.webpackChunknotes_3=self.webpackChunknotes_3||[]).push([[8632],{2463:(r,n,e)=>{e.r(n),e.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>c,frontMatter:()=>l,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"CodeSnippets/Refine","title":"Refine","description":"\u5217\u8868\u9875","source":"@site/docs/CodeSnippets/Refine.mdx","sourceDirName":"CodeSnippets","slug":"/CodeSnippets/Refine","permalink":"/notes3/docs/CodeSnippets/Refine","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/CodeSnippets/Refine.mdx","tags":[],"version":"current","frontMatter":{},"sidebar":"codeSnippets","previous":{"title":"Python","permalink":"/notes3/docs/CodeSnippets/Python"},"next":{"title":"Uniapp","permalink":"/notes3/docs/CodeSnippets/Uniapp"}}');var o=e(6070),a=e(5658);const l={},s=void 0,i={},d=[{value:"\u5217\u8868\u9875",id:"\u5217\u8868\u9875",level:2},{value:"\u7f16\u8f91\u9875",id:"\u7f16\u8f91\u9875",level:2}];function m(r){const n={code:"code",h2:"h2",pre:"pre",...(0,a.R)(),...r.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h2,{id:"\u5217\u8868\u9875",children:"\u5217\u8868\u9875"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'"use client";\r\n\r\nimport {DeleteButton, EditButton, List, useTable} from "@refinedev/antd";\r\nimport type {BaseRecord, CrudFilters} from "@refinedev/core";\r\nimport {Button, Form, Input, Select, Space, Table, Tag} from "antd";\r\nimport React from "react";\r\n\r\nconst AIAgentList = () => {\r\n    const [form] = Form.useForm();\r\n    const {tableProps, searchFormProps} = useTable({\r\n        syncWithLocation: false,\r\n        onSearch: (params: any) => {\r\n            const filters: CrudFilters = [];\r\n\r\n            // \u5373\u4f7f\u503c\u4e3a\u7a7a\u4e5f\u6dfb\u52a0\u8fc7\u6ee4\u6761\u4ef6\r\n            filters.push({\r\n                field: "name",\r\n                operator: "contains",\r\n                value: params.name || ""\r\n            });\r\n\r\n            filters.push({\r\n                field: "type",\r\n                operator: "eq",\r\n                value: params.type || undefined\r\n            });\r\n\r\n            return filters;\r\n        },\r\n    });\r\n\r\n    // \u5904\u7406\u8868\u5355\u63d0\u4ea4\r\n    const handleSearch = () => {\r\n        const values = form.getFieldsValue();\r\n        searchFormProps?.onFinish?.(values);\r\n    };\r\n\r\n    // \u5904\u7406\u91cd\u7f6e\r\n    const handleReset = () => {\r\n        form.resetFields();\r\n        // \u4f7f\u7528\u7a7a\u503c\u89e6\u53d1\u641c\u7d22\r\n        searchFormProps?.onFinish?.({\r\n            name: "",\r\n            type: undefined\r\n        });\r\n    };\r\n    return (\r\n        <List>\r\n            {/* \u6dfb\u52a0\u641c\u7d22\u8868\u5355 */}\r\n            <Form\r\n                {...searchFormProps}\r\n                form={form}\r\n                layout="inline"\r\n                style={{marginBottom: 16}}\r\n            >\r\n                <Form.Item name="name">\r\n                    <Input\r\n                        placeholder="\u641c\u7d22\u667a\u80fd\u4f53\u540d\u79f0"\r\n                        allowClear\r\n                        style={{width: 200}}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item name="type">\r\n                    <Select\r\n                        placeholder="\u9009\u62e9\u667a\u80fd\u4f53\u7c7b\u578b"\r\n                        allowClear\r\n                        style={{width: 140}}\r\n                        options={[\r\n                            {label: \'\u804a\u5929\u52a9\u624b\', value: \'CHAT\'},\r\n                            {label: \'\u6587\u672c\u751f\u6210\', value: \'TEXT\'},\r\n                            {label: \'\u5de5\u4f5c\u6d41\', value: \'WORKFLOW\'},\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item>\r\n                    <Space>\r\n                        <Button\r\n                            type="primary"\r\n                            onClick={handleSearch}\r\n                        >\r\n                            \u641c\u7d22\r\n                        </Button>\r\n                        <Button\r\n                            onClick={handleReset}\r\n                        >\r\n                            \u91cd\u7f6e\r\n                        </Button>\r\n                    </Space>\r\n                </Form.Item>\r\n            </Form>\r\n            <Table {...tableProps} rowKey="id">\r\n                <Table.Column\r\n                    title="\u667a\u80fd\u4f53\u540d\u79f0"\r\n                    dataIndex="name"\r\n                />\r\n                <Table.Column\r\n                    title="\u56fe\u6807"\r\n                    dataIndex="icon"\r\n                    render={(icon) => (\r\n                        icon ? <img src={icon} alt="icon"\r\n                                    style={{width: 40, height: 40, borderRadius: \'4px\'}}/> : \'-\'\r\n                    )}\r\n                />\r\n                <Table.Column\r\n                    title="\u53c2\u6570\u914d\u7f6e"\r\n                    dataIndex="parameters"\r\n                    render={(params) => (\r\n                        <pre style={{margin: 0}}>\r\n                            {JSON.stringify(params, null, 2)}\r\n                        </pre>\r\n                    )}\r\n                />\r\n                <Table.Column\r\n                    title="\u521b\u5efa\u65f6\u95f4"\r\n                    dataIndex="createdAt"\r\n                    render={(date) => new Date(date).toLocaleString()}\r\n                />\r\n                <Table.Column\r\n                    title="\u6807\u7b7e"\r\n                    dataIndex="tags"\r\n                    render={(tags) => (\r\n                        <Space wrap>\r\n                            {Array.isArray(tags) && tags.map((tag, index) => (\r\n                                <Tag color="blue" key={index}>\r\n                                    {tag}\r\n                                </Tag>\r\n                            ))}\r\n                        </Space>\r\n                    )}\r\n                />\r\n                <Table.Column\r\n                    title="\u7528\u6237"\r\n                    dataIndex="userId"\r\n                    render={(value) => (\r\n                        <RecordNameCell\r\n                            value={value}\r\n                            resource="user"\r\n                            nameField="nickname"\r\n                        />\r\n                    )}\r\n                />\r\n                <Table.Column\r\n                    title={"\u64cd\u4f5c"}\r\n                    dataIndex="actions"\r\n                    render={(_, record: BaseRecord) => (\r\n                        <Space>\r\n                            <EditButton hideText size="small" recordItemId={record.id}/>\r\n                            <DeleteButton hideText size="small" recordItemId={record.id}/>\r\n                        </Space>\r\n                    )}\r\n                />\r\n            </Table>\r\n        </List>\r\n    );\r\n}\r\n\r\nexport default AIAgentList;\n'})}),"\n",(0,o.jsx)(n.h2,{id:"\u7f16\u8f91\u9875",children:"\u7f16\u8f91\u9875"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-tsx",children:'"use client";\r\n\r\nimport {Edit, useForm} from "@refinedev/antd";\r\nimport {Form, Input, Select, Upload} from "antd";\r\nimport React from "react";\r\nimport {PlusOutlined} from "@ant-design/icons";\r\n\r\nexport default function AIAgentEdit() {\r\n    const {formProps, saveButtonProps} = useForm({});\r\n    return (\r\n        <Edit saveButtonProps={saveButtonProps}>\r\n            <Form<any> {...formProps} layout="vertical">\r\n                <Form.Item\r\n                    label="\u667a\u80fd\u4f53\u540d\u79f0"\r\n                    name="name"\r\n                    rules={[{required: true, message: \'\u8bf7\u8f93\u5165\u667a\u80fd\u4f53\u540d\u79f0\'}]}\r\n                >\r\n                    <Input placeholder="\u8bf7\u8f93\u5165\u667a\u80fd\u4f53\u540d\u79f0"/>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label="\u56fe\u6807"\r\n                    name="icon"\r\n                >\r\n                    <Upload\r\n                        name="file"\r\n                        action="/api/file/upload"\r\n                        listType="picture-card"\r\n                        maxCount={1}\r\n                        defaultFileList={\r\n                            formProps.initialValues?.icon\r\n                                ? [{\r\n                                    uid: \'-1\',\r\n                                    name: \'icon\',\r\n                                    status: \'done\',\r\n                                    url: formProps.initialValues.icon,\r\n                                }]\r\n                                : []\r\n                        }\r\n                        onChange={({file}) => {\r\n                            if (file.status === \'done\') {\r\n                                formProps.form?.setFieldValue(\'icon\', file.response.data.url);\r\n                            }\r\n                        }}\r\n                    >\r\n                        <div>\r\n                            <PlusOutlined/>\r\n                            <div style={{marginTop: 8}}>\u4e0a\u4f20\u56fe\u6807</div>\r\n                        </div>\r\n                    </Upload>\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label="\u529f\u80fd\u63cf\u8ff0"\r\n                    name="description"\r\n                >\r\n                    <Input.TextArea\r\n                        rows={4}\r\n                        placeholder="\u8bf7\u8f93\u5165\u667a\u80fd\u4f53\u7684\u529f\u80fd\u63cf\u8ff0"\r\n                    />\r\n                </Form.Item>\r\n\r\n                <Form.Item\r\n                    label="\u667a\u80fd\u4f53\u7c7b\u578b"\r\n                    name="type"\r\n                    rules={[{required: true, message: \'\u8bf7\u9009\u62e9\u667a\u80fd\u4f53\u7c7b\u578b\'}]}\r\n                    initialValue="CHAT"\r\n                >\r\n                    <Select>\r\n                        <Select.Option value="CHAT">\u804a\u5929\u52a9\u624b</Select.Option>\r\n                        <Select.Option value="TEXT">\u6587\u672c\u751f\u6210</Select.Option>\r\n                        <Select.Option value="WORKFLOW">\u5de5\u4f5c\u6d41</Select.Option>\r\n                    </Select>\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label="Dify\u5bc6\u94a5"\r\n                    name="difyKey"\r\n                >\r\n                    <Input.Password\r\n                        placeholder="\u8bf7\u8f93\u5165Dify\u5bc6\u94a5"\r\n                    />\r\n                </Form.Item>\r\n                <Form.Item\r\n                    label="\u6807\u7b7e"\r\n                    name="tags"\r\n                >\r\n                    <Select\r\n                        mode="tags"\r\n                        style={{width: \'100%\'}}\r\n                        placeholder="\u8bf7\u8f93\u5165\u6216\u9009\u62e9\u6807\u7b7e"\r\n                        options={[\r\n                            {value: \'SY\', label: \'\u5546\u4e1aIP\'},\r\n                            {value: \'CH\', label: \'\u51fa\u6d77\'},\r\n                            {value: \'YX\', label: \'\u8425\u9500\'},\r\n                            {value: \'TRZ\', label: \'\u6295\u878d\u8d44\'},\r\n                            {value: \'GL\', label: \'\u7ba1\u7406\'},\r\n                            {value: \'YY\', label: \'AI\u5e94\u7528\'},\r\n                        ]}\r\n                    />\r\n                </Form.Item>\r\n            </Form>\r\n        </Edit>\r\n    );\r\n}\r\n\n'})})]})}function c(r={}){const{wrapper:n}={...(0,a.R)(),...r.components};return n?(0,o.jsx)(n,{...r,children:(0,o.jsx)(m,{...r})}):m(r)}},5658:(r,n,e)=>{e.d(n,{R:()=>l,x:()=>s});var t=e(758);const o={},a=t.createContext(o);function l(r){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof r?r(n):{...n,...r}}),[n,r])}function s(r){let n;return n=r.disableParentContext?"function"==typeof r.components?r.components(o):r.components||o:l(r.components),t.createElement(a.Provider,{value:n},r.children)}}}]);