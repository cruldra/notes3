"use strict";(self.webpackChunknotes_3=self.webpackChunknotes_3||[]).push([[70008],{54213:(n,e,s)=>{s.d(e,{R:()=>l,x:()=>c});var r=s(36672);const i={},t=r.createContext(i);function l(n){const e=r.useContext(t);return r.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function c(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:l(n.components),r.createElement(t.Provider,{value:e},n.children)}},80773:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>a,contentTitle:()=>c,default:()=>o,frontMatter:()=>l,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"Rust/panic\u4e0e\u5f02\u5e38\u7684\u533a\u522b","title":"panic! \u4e0e\u5f02\u5e38\uff08throw\uff09\u7684\u533a\u522b","description":"\ud83e\udd14 \u4e3a\u4ec0\u4e48 Rust \u7684 panic! \u4e0d\u53eb throw\uff1f","source":"@site/docs/Rust/panic\u4e0e\u5f02\u5e38\u7684\u533a\u522b.md","sourceDirName":"Rust","slug":"/Rust/panic\u4e0e\u5f02\u5e38\u7684\u533a\u522b","permalink":"/notes3/docs/Rust/panic\u4e0e\u5f02\u5e38\u7684\u533a\u522b","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/Rust/panic\u4e0e\u5f02\u5e38\u7684\u533a\u522b.md","tags":[],"version":"current","frontMatter":{},"sidebar":"rust","previous":{"title":"Rust Trait \u8be6\u89e3","permalink":"/notes3/docs/Rust/Trait\u8be6\u89e3"},"next":{"title":"\u4e3a\u4ec0\u4e48\u8981\u5b66\u4e60 Rust\uff1f","permalink":"/notes3/docs/Rust/\u4e3a\u4ec0\u4e48\u5b66\u4e60Rust"}}');var i=s(23420),t=s(54213);const l={},c="panic! \u4e0e\u5f02\u5e38\uff08throw\uff09\u7684\u533a\u522b",a={},d=[{value:"\ud83e\udd14 \u4e3a\u4ec0\u4e48 Rust \u7684 panic! \u4e0d\u53eb throw\uff1f",id:"-\u4e3a\u4ec0\u4e48-rust-\u7684-panic-\u4e0d\u53eb-throw",level:2},{value:"\ud83d\udd0d \u672c\u8d28\u533a\u522b",id:"-\u672c\u8d28\u533a\u522b",level:2},{value:"1. \u8bbe\u8ba1\u54f2\u5b66\u4e0d\u540c",id:"1-\u8bbe\u8ba1\u54f2\u5b66\u4e0d\u540c",level:3},{value:"\u5176\u4ed6\u8bed\u8a00\u7684 throw\uff08\u5f02\u5e38\u673a\u5236\uff09",id:"\u5176\u4ed6\u8bed\u8a00\u7684-throw\u5f02\u5e38\u673a\u5236",level:4},{value:"Rust \u7684 panic!\uff08\u6050\u614c\u673a\u5236\uff09",id:"rust-\u7684-panic\u6050\u614c\u673a\u5236",level:4},{value:"2. \u4f7f\u7528\u573a\u666f\u5bf9\u6bd4",id:"2-\u4f7f\u7528\u573a\u666f\u5bf9\u6bd4",level:3},{value:"\u274c \u5176\u4ed6\u8bed\u8a00\u53ef\u80fd\u8fd9\u6837\u5199\uff08\u4f7f\u7528\u5f02\u5e38\uff09",id:"-\u5176\u4ed6\u8bed\u8a00\u53ef\u80fd\u8fd9\u6837\u5199\u4f7f\u7528\u5f02\u5e38",level:4},{value:"\u2705 Rust \u7684\u65b9\u5f0f",id:"-rust-\u7684\u65b9\u5f0f",level:4},{value:"3. \u9519\u8bef\u5904\u7406\u6a21\u578b\u4e0d\u540c",id:"3-\u9519\u8bef\u5904\u7406\u6a21\u578b\u4e0d\u540c",level:3},{value:"\u5f02\u5e38\u6a21\u578b\uff08Java/Python/C++\uff09",id:"\u5f02\u5e38\u6a21\u578bjavapythonc",level:4},{value:"Rust \u7684\u53cc\u8f68\u6a21\u578b",id:"rust-\u7684\u53cc\u8f68\u6a21\u578b",level:4},{value:"4. \u4e3a\u4ec0\u4e48\u53eb &quot;panic&quot;\uff1f",id:"4-\u4e3a\u4ec0\u4e48\u53eb-panic",level:3},{value:"\ud83d\udce2 \u7d27\u6025\u6027",id:"-\u7d27\u6025\u6027",level:4},{value:"\ud83d\udeab \u4e0d\u53ef\u6062\u590d",id:"-\u4e0d\u53ef\u6062\u590d",level:4},{value:"\ud83d\udc1b \u7a0b\u5e8f\u5458\u9519\u8bef",id:"-\u7a0b\u5e8f\u5458\u9519\u8bef",level:4},{value:"\ud83e\udde0 \u5fc3\u7406\u6697\u793a",id:"-\u5fc3\u7406\u6697\u793a",level:4},{value:"\ud83d\udcca \u5bf9\u6bd4\u603b\u7ed3",id:"-\u5bf9\u6bd4\u603b\u7ed3",level:2},{value:"\ud83d\udca1 Rust \u7684\u9519\u8bef\u5904\u7406\u54f2\u5b66",id:"-rust-\u7684\u9519\u8bef\u5904\u7406\u54f2\u5b66",level:2},{value:"1. \u9884\u671f\u7684\u3001\u53ef\u6062\u590d\u7684\u9519\u8bef \u2192 \u4f7f\u7528 Result",id:"1-\u9884\u671f\u7684\u53ef\u6062\u590d\u7684\u9519\u8bef--\u4f7f\u7528-result",level:3},{value:"2. \u4e0d\u5e94\u8be5\u53d1\u751f\u7684\u9519\u8bef \u2192 \u4f7f\u7528 panic!",id:"2-\u4e0d\u5e94\u8be5\u53d1\u751f\u7684\u9519\u8bef--\u4f7f\u7528-panic",level:3},{value:"\ud83c\udfaf \u5b9e\u9645\u4f7f\u7528\u5efa\u8bae",id:"-\u5b9e\u9645\u4f7f\u7528\u5efa\u8bae",level:2},{value:"1. 99% \u7684\u60c5\u51b5\u4f7f\u7528 <code>Result</code>",id:"1-99-\u7684\u60c5\u51b5\u4f7f\u7528-result",level:3},{value:"2. \u5f88\u5c11\u4f7f\u7528 <code>panic!</code>",id:"2-\u5f88\u5c11\u4f7f\u7528-panic",level:3},{value:"3. \u5f00\u53d1\u65f6\u53ef\u4ee5\u7528 <code>unwrap</code>/<code>expect</code>",id:"3-\u5f00\u53d1\u65f6\u53ef\u4ee5\u7528-unwrapexpect",level:3},{value:"4. \u751f\u4ea7\u4ee3\u7801\u907f\u514d <code>panic!</code>",id:"4-\u751f\u4ea7\u4ee3\u7801\u907f\u514d-panic",level:3},{value:"\ud83d\udd27 panic! \u7684\u9ad8\u7ea7\u7528\u6cd5",id:"-panic-\u7684\u9ad8\u7ea7\u7528\u6cd5",level:2},{value:"1. \u81ea\u5b9a\u4e49 panic \u5904\u7406\u5668",id:"1-\u81ea\u5b9a\u4e49-panic-\u5904\u7406\u5668",level:3},{value:"2. \u6355\u83b7 panic\uff08\u4e0d\u63a8\u8350\uff09",id:"2-\u6355\u83b7-panic\u4e0d\u63a8\u8350",level:3},{value:"3. \u65ad\u8a00\u5b8f\u5bb6\u65cf",id:"3-\u65ad\u8a00\u5b8f\u5bb6\u65cf",level:3},{value:"\ud83d\udcdd \u603b\u7ed3",id:"-\u603b\u7ed3",level:2},{value:"panic! \u8fd9\u4e2a\u540d\u5b57\u5f88\u8d34\u5207",id:"panic-\u8fd9\u4e2a\u540d\u5b57\u5f88\u8d34\u5207",level:3},{value:"Rust \u7684\u9519\u8bef\u5904\u7406\u4f18\u52bf",id:"rust-\u7684\u9519\u8bef\u5904\u7406\u4f18\u52bf",level:3},{value:"\u8bb0\u4f4f\u8fd9\u4e2a\u539f\u5219",id:"\u8bb0\u4f4f\u8fd9\u4e2a\u539f\u5219",level:3}];function h(n){const e={blockquote:"blockquote",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"panic-\u4e0e\u5f02\u5e38throw\u7684\u533a\u522b",children:"panic! \u4e0e\u5f02\u5e38\uff08throw\uff09\u7684\u533a\u522b"})}),"\n",(0,i.jsx)(e.h2,{id:"-\u4e3a\u4ec0\u4e48-rust-\u7684-panic-\u4e0d\u53eb-throw",children:"\ud83e\udd14 \u4e3a\u4ec0\u4e48 Rust \u7684 panic! \u4e0d\u53eb throw\uff1f"}),"\n",(0,i.jsxs)(e.p,{children:[(0,i.jsx)(e.code,{children:"panic!"})," \u548c\u5176\u4ed6\u8bed\u8a00\u7684 ",(0,i.jsx)(e.code,{children:"throw"})," \u867d\u7136\u770b\u8d77\u6765\u76f8\u4f3c\uff0c\u4f46\u5b9e\u9645\u4e0a\u6709\u672c\u8d28\u533a\u522b\uff0c\u8fd9\u4e5f\u662f\u4e3a\u4ec0\u4e48 Rust \u9009\u62e9\u4e86\u4e0d\u540c\u7684\u540d\u5b57\u3002"]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-\u672c\u8d28\u533a\u522b",children:"\ud83d\udd0d \u672c\u8d28\u533a\u522b"}),"\n",(0,i.jsx)(e.h3,{id:"1-\u8bbe\u8ba1\u54f2\u5b66\u4e0d\u540c",children:"1. \u8bbe\u8ba1\u54f2\u5b66\u4e0d\u540c"}),"\n",(0,i.jsx)(e.h4,{id:"\u5176\u4ed6\u8bed\u8a00\u7684-throw\u5f02\u5e38\u673a\u5236",children:"\u5176\u4ed6\u8bed\u8a00\u7684 throw\uff08\u5f02\u5e38\u673a\u5236\uff09"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\u2705 \u5f02\u5e38\u662f",(0,i.jsx)(e.strong,{children:"\u6b63\u5e38\u7684\u63a7\u5236\u6d41"}),"\u7684\u4e00\u90e8\u5206"]}),"\n",(0,i.jsx)(e.li,{children:"\u2705 \u53ef\u4ee5\u88ab\u6355\u83b7\u3001\u5904\u7406\u3001\u91cd\u65b0\u629b\u51fa"}),"\n",(0,i.jsxs)(e.li,{children:["\u2705 \u7ecf\u5e38\u7528\u4e8e\u5904\u7406",(0,i.jsx)(e.strong,{children:"\u53ef\u6062\u590d\u7684\u9519\u8bef"})]}),"\n",(0,i.jsx)(e.li,{children:"\u2705 \u4f8b\u5982\uff1a\u6587\u4ef6\u4e0d\u5b58\u5728\u3001\u7f51\u7edc\u8d85\u65f6\u3001\u89e3\u6790\u5931\u8d25"}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:'// Java \u793a\u4f8b\ntry {\n    File file = new File("config.txt");\n    String data = readFile(file);\n} catch (FileNotFoundException e) {\n    // \u5904\u7406\u6587\u4ef6\u4e0d\u5b58\u5728 - \u8fd9\u662f\u9884\u671f\u7684\u60c5\u51b5\n    System.out.println("\u6587\u4ef6\u4e0d\u5b58\u5728");\n}\n'})}),"\n",(0,i.jsx)(e.h4,{id:"rust-\u7684-panic\u6050\u614c\u673a\u5236",children:"Rust \u7684 panic!\uff08\u6050\u614c\u673a\u5236\uff09"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["\u26a0\ufe0f panic \u662f",(0,i.jsx)(e.strong,{children:"\u7a0b\u5e8f\u9047\u5230\u4e86\u4e0d\u5e94\u8be5\u53d1\u751f\u7684\u60c5\u51b5"})]}),"\n",(0,i.jsxs)(e.li,{children:["\u26a0\ufe0f \u8868\u793a\u7a0b\u5e8f\u8fdb\u5165\u4e86",(0,i.jsx)(e.strong,{children:"\u4e0d\u53ef\u6062\u590d\u7684\u72b6\u6001"})]}),"\n",(0,i.jsxs)(e.li,{children:["\u26a0\ufe0f \u9ed8\u8ba4\u884c\u4e3a\u662f",(0,i.jsx)(e.strong,{children:"\u5c55\u5f00\u6808\u5e76\u7ec8\u6b62\u7a0b\u5e8f"})]}),"\n",(0,i.jsx)(e.li,{children:'\u26a0\ufe0f \u7528\u4e8e\u8868\u793a"\u8fd9\u4e0d\u5e94\u8be5\u53d1\u751f\uff0c\u7a0b\u5e8f\u6709 bug"'}),"\n"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'// Rust \u793a\u4f8b\nfn get_item(index: usize, items: &[i32]) -> i32 {\n    if index >= items.len() {\n        panic!("\u7d22\u5f15\u8d8a\u754c\uff01\u8fd9\u662f\u7a0b\u5e8f bug\uff01");  // \u4e0d\u5e94\u8be5\u53d1\u751f\n    }\n    items[index]\n}\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"2-\u4f7f\u7528\u573a\u666f\u5bf9\u6bd4",children:"2. \u4f7f\u7528\u573a\u666f\u5bf9\u6bd4"}),"\n",(0,i.jsx)(e.h4,{id:"-\u5176\u4ed6\u8bed\u8a00\u53ef\u80fd\u8fd9\u6837\u5199\u4f7f\u7528\u5f02\u5e38",children:"\u274c \u5176\u4ed6\u8bed\u8a00\u53ef\u80fd\u8fd9\u6837\u5199\uff08\u4f7f\u7528\u5f02\u5e38\uff09"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-python",children:'# Python \u793a\u4f8b\ntry:\n    file = open("config.txt")\n    data = parse(file.read())\nexcept FileNotFoundError:\n    # \u5904\u7406\u6587\u4ef6\u4e0d\u5b58\u5728 - \u8fd9\u662f\u9884\u671f\u7684\u60c5\u51b5\n    print("\u914d\u7f6e\u6587\u4ef6\u4e0d\u5b58\u5728")\nexcept ParseError:\n    # \u5904\u7406\u89e3\u6790\u9519\u8bef - \u4e5f\u662f\u9884\u671f\u7684\u60c5\u51b5\n    print("\u914d\u7f6e\u6587\u4ef6\u683c\u5f0f\u9519\u8bef")\n'})}),"\n",(0,i.jsx)(e.h4,{id:"-rust-\u7684\u65b9\u5f0f",children:"\u2705 Rust \u7684\u65b9\u5f0f"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'// \u53ef\u6062\u590d\u7684\u9519\u8bef \u2192 \u4f7f\u7528 Result\nuse std::fs::File;\nuse std::io::Read;\n\nfn read_config() -> Result<String, std::io::Error> {\n    let mut file = File::open("config.txt")?;  // ? \u64cd\u4f5c\u7b26\u4f20\u64ad\u9519\u8bef\n    let mut contents = String::new();\n    file.read_to_string(&mut contents)?;\n    Ok(contents)\n}\n\n// \u8c03\u7528\u65f6\u5904\u7406\u9519\u8bef\nmatch read_config() {\n    Ok(config) => println!("\u914d\u7f6e: {}", config),\n    Err(e) => println!("\u8bfb\u53d6\u5931\u8d25: {}", e),\n}\n'})}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'// panic! \u53ea\u7528\u4e8e\u771f\u6b63\u7684\u7a0b\u5e8f\u9519\u8bef\nfn divide(a: i32, b: i32) -> i32 {\n    if b == 0 {\n        panic!("\u9664\u4ee5\u96f6\uff01\u8fd9\u662f\u7a0b\u5e8f\u903b\u8f91\u9519\u8bef\uff01");\n    }\n    a / b\n}\n\n// \u66f4\u597d\u7684\u65b9\u5f0f\uff1a\u8fd4\u56de Result\nfn divide_safe(a: i32, b: i32) -> Result<i32, String> {\n    if b == 0 {\n        Err("\u9664\u6570\u4e0d\u80fd\u4e3a\u96f6".to_string())\n    } else {\n        Ok(a / b)\n    }\n}\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"3-\u9519\u8bef\u5904\u7406\u6a21\u578b\u4e0d\u540c",children:"3. \u9519\u8bef\u5904\u7406\u6a21\u578b\u4e0d\u540c"}),"\n",(0,i.jsx)(e.h4,{id:"\u5f02\u5e38\u6a21\u578bjavapythonc",children:"\u5f02\u5e38\u6a21\u578b\uff08Java/Python/C++\uff09"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-java",children:"// Java - \u5f02\u5e38\u53ef\u4ee5\u88ab\u6355\u83b7\u548c\u5904\u7406\ntry {\n    riskyOperation();\n    anotherRiskyOperation();\n} catch (IOException e) {\n    // \u6355\u83b7\u5e76\u5904\u7406 IO \u5f02\u5e38\n    handleIOError(e);\n} catch (Exception e) {\n    // \u6355\u83b7\u6240\u6709\u5176\u4ed6\u5f02\u5e38\n    handleGenericError(e);\n} finally {\n    // \u6e05\u7406\u8d44\u6e90\n    cleanup();\n}\n"})}),"\n",(0,i.jsx)(e.h4,{id:"rust-\u7684\u53cc\u8f68\u6a21\u578b",children:"Rust \u7684\u53cc\u8f68\u6a21\u578b"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'// \u53ef\u6062\u590d\u9519\u8bef \u2192 Result<T, E>\nfn read_file(path: &str) -> Result<String, std::io::Error> {\n    std::fs::read_to_string(path)  // \u8fd4\u56de Result\n}\n\n// \u4f7f\u7528 ? \u64cd\u4f5c\u7b26\u4f18\u96c5\u5730\u4f20\u64ad\u9519\u8bef\nfn process_file(path: &str) -> Result<(), Box<dyn std::error::Error>> {\n    let content = read_file(path)?;  // \u5982\u679c\u5931\u8d25\uff0c\u81ea\u52a8\u8fd4\u56de Err\n    let parsed = parse_content(&content)?;\n    save_result(parsed)?;\n    Ok(())\n}\n\n// \u4e0d\u53ef\u6062\u590d\u9519\u8bef \u2192 panic!\nfn assert_positive(n: i32) {\n    if n <= 0 {\n        panic!("\u6570\u5b57\u5fc5\u987b\u4e3a\u6b63\u6570\uff01\u8c03\u7528\u8005\u8fdd\u53cd\u4e86\u7ea6\u5b9a\uff01");\n    }\n}\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h3,{id:"4-\u4e3a\u4ec0\u4e48\u53eb-panic",children:'4. \u4e3a\u4ec0\u4e48\u53eb "panic"\uff1f'}),"\n",(0,i.jsx)(e.p,{children:"\u8fd9\u4e2a\u540d\u5b57\u4f20\u8fbe\u4e86\u51e0\u4e2a\u91cd\u8981\u4fe1\u606f\uff1a"}),"\n",(0,i.jsx)(e.h4,{id:"-\u7d27\u6025\u6027",children:"\ud83d\udce2 \u7d27\u6025\u6027"}),"\n",(0,i.jsx)(e.p,{children:'"panic"\uff08\u6050\u614c\uff09\u8868\u793a\u60c5\u51b5\u5f88\u4e25\u91cd\uff0c\u4e0d\u662f\u666e\u901a\u7684\u9519\u8bef\u3002'}),"\n",(0,i.jsx)(e.h4,{id:"-\u4e0d\u53ef\u6062\u590d",children:"\ud83d\udeab \u4e0d\u53ef\u6062\u590d"}),"\n",(0,i.jsx)(e.p,{children:"\u7a0b\u5e8f\u8fdb\u5165\u4e86\u6df7\u4e71\u72b6\u6001\uff0c\u9700\u8981\u7acb\u5373\u505c\u6b62\u3002"}),"\n",(0,i.jsx)(e.h4,{id:"-\u7a0b\u5e8f\u5458\u9519\u8bef",children:"\ud83d\udc1b \u7a0b\u5e8f\u5458\u9519\u8bef"}),"\n",(0,i.jsx)(e.p,{children:"\u4e0d\u662f\u7528\u6237\u9519\u8bef\u6216\u73af\u5883\u95ee\u9898\uff0c\u800c\u662f\u4ee3\u7801\u672c\u8eab\u6709 bug\u3002"}),"\n",(0,i.jsx)(e.h4,{id:"-\u5fc3\u7406\u6697\u793a",children:"\ud83e\udde0 \u5fc3\u7406\u6697\u793a"}),"\n",(0,i.jsx)(e.p,{children:'\u8ba9\u4f60\u4e09\u601d\uff1a"\u6211\u771f\u7684\u9700\u8981 panic \u5417\uff1f\u8fd8\u662f\u5e94\u8be5\u7528 Result\uff1f"'}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"// \u274c \u4e0d\u597d\u7684\u505a\u6cd5 - \u6ee5\u7528 panic\nfn get_user_age(input: &str) -> u8 {\n    input.parse().unwrap()  // \u7528\u6237\u8f93\u5165\u9519\u8bef\u5c31 panic\uff0c\u592a\u7c97\u66b4\uff01\n}\n\n// \u2705 \u597d\u7684\u505a\u6cd5 - \u4f7f\u7528 Result\nfn get_user_age(input: &str) -> Result<u8, std::num::ParseIntError> {\n    input.parse()  // \u8ba9\u8c03\u7528\u8005\u51b3\u5b9a\u5982\u4f55\u5904\u7406\u9519\u8bef\n}\n\n// \u2705 \u6216\u8005\u63d0\u4f9b\u9ed8\u8ba4\u503c\nfn get_user_age_or_default(input: &str) -> u8 {\n    input.parse().unwrap_or(18)  // \u89e3\u6790\u5931\u8d25\u8fd4\u56de\u9ed8\u8ba4\u503c\n}\n"})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-\u5bf9\u6bd4\u603b\u7ed3",children:"\ud83d\udcca \u5bf9\u6bd4\u603b\u7ed3"}),"\n",(0,i.jsxs)(e.table,{children:[(0,i.jsx)(e.thead,{children:(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.th,{children:"\u7279\u6027"}),(0,i.jsx)(e.th,{children:"panic! (Rust)"}),(0,i.jsx)(e.th,{children:"throw (\u5176\u4ed6\u8bed\u8a00)"})]})}),(0,i.jsxs)(e.tbody,{children:[(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"\u7528\u9014"})}),(0,i.jsx)(e.td,{children:"\u4e0d\u53ef\u6062\u590d\u7684\u7a0b\u5e8f\u9519\u8bef"}),(0,i.jsx)(e.td,{children:"\u53ef\u6062\u590d\u7684\u5f02\u5e38\u60c5\u51b5"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"\u80fd\u5426\u6355\u83b7"})}),(0,i.jsx)(e.td,{children:"\u53ef\u4ee5\u4f46\u4e0d\u63a8\u8350\uff08catch_unwind\uff09"}),(0,i.jsx)(e.td,{children:"\u8bbe\u8ba1\u4e3a\u53ef\u6355\u83b7\uff08try/catch\uff09"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"\u6027\u80fd"})}),(0,i.jsx)(e.td,{children:"\u5c55\u5f00\u6808\u6709\u5f00\u9500"}),(0,i.jsx)(e.td,{children:"\u5f02\u5e38\u5904\u7406\u6709\u5f00\u9500"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"\u4f7f\u7528\u9891\u7387"})}),(0,i.jsx)(e.td,{children:"\u5f88\u5c11\u4f7f\u7528"}),(0,i.jsx)(e.td,{children:"\u7ecf\u5e38\u4f7f\u7528"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"\u5178\u578b\u573a\u666f"})}),(0,i.jsx)(e.td,{children:"\u6570\u7ec4\u8d8a\u754c\u3001\u65ad\u8a00\u5931\u8d25\u3001\u4e0d\u53d8\u91cf\u88ab\u7834\u574f"}),(0,i.jsx)(e.td,{children:"\u6587\u4ef6\u4e0d\u5b58\u5728\u3001\u7f51\u7edc\u9519\u8bef\u3001\u7528\u6237\u8f93\u5165\u9519\u8bef"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"\u63a7\u5236\u6d41"})}),(0,i.jsx)(e.td,{children:"\u7ec8\u6b62\u7a0b\u5e8f\uff08\u6216\u7ebf\u7a0b\uff09"}),(0,i.jsx)(e.td,{children:"\u8df3\u8f6c\u5230 catch \u5757"})]}),(0,i.jsxs)(e.tr,{children:[(0,i.jsx)(e.td,{children:(0,i.jsx)(e.strong,{children:"\u7f16\u8bd1\u5668\u68c0\u67e5"})}),(0,i.jsx)(e.td,{children:"\u65e0\u9700\u58f0\u660e"}),(0,i.jsx)(e.td,{children:"\u67d0\u4e9b\u8bed\u8a00\u9700\u8981\u58f0\u660e\uff08checked exception\uff09"})]})]})]}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-rust-\u7684\u9519\u8bef\u5904\u7406\u54f2\u5b66",children:"\ud83d\udca1 Rust \u7684\u9519\u8bef\u5904\u7406\u54f2\u5b66"}),"\n",(0,i.jsx)(e.p,{children:"Rust \u5f3a\u5236\u4f60\u533a\u5206\u4e24\u79cd\u9519\u8bef\uff1a"}),"\n",(0,i.jsx)(e.h3,{id:"1-\u9884\u671f\u7684\u53ef\u6062\u590d\u7684\u9519\u8bef--\u4f7f\u7528-result",children:"1. \u9884\u671f\u7684\u3001\u53ef\u6062\u590d\u7684\u9519\u8bef \u2192 \u4f7f\u7528 Result"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'use std::num::ParseIntError;\n\n// \u2705 \u7528\u6237\u8f93\u5165\u53ef\u80fd\u65e0\u6548\uff0c\u8fd9\u662f\u6b63\u5e38\u7684\nfn parse_age(input: &str) -> Result<u8, ParseIntError> {\n    input.parse()\n}\n\n// \u8c03\u7528\u65f6\u4f18\u96c5\u5730\u5904\u7406\nfn main() {\n    match parse_age("25") {\n        Ok(age) => println!("\u5e74\u9f84: {}", age),\n        Err(e) => println!("\u89e3\u6790\u5931\u8d25: {}", e),\n    }\n    \n    // \u6216\u8005\u4f7f\u7528 ? \u64cd\u4f5c\u7b26\n    let age = parse_age("25").unwrap_or(0);\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"2-\u4e0d\u5e94\u8be5\u53d1\u751f\u7684\u9519\u8bef--\u4f7f\u7528-panic",children:"2. \u4e0d\u5e94\u8be5\u53d1\u751f\u7684\u9519\u8bef \u2192 \u4f7f\u7528 panic!"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'// \u274c \u8c03\u7528\u8005\u5e94\u8be5\u5148\u68c0\u67e5\uff0c\u5982\u679c\u5230\u8fd9\u91cc\u8bf4\u660e\u6709 bug\nfn get_first_element(vec: &Vec<i32>) -> i32 {\n    if vec.is_empty() {\n        panic!("\u5411\u91cf\u4e3a\u7a7a\uff01\u8c03\u7528\u8005\u5e94\u8be5\u5148\u68c0\u67e5\uff01");\n    }\n    vec[0]\n}\n\n// \u2705 \u66f4\u597d\u7684\u65b9\u5f0f \u2192 \u8fd4\u56de Option\uff0c\u8ba9\u8c03\u7528\u8005\u51b3\u5b9a\nfn get_first_element_safe(vec: &Vec<i32>) -> Option<i32> {\n    vec.first().copied()\n}\n\n// \u4f7f\u7528\u793a\u4f8b\nfn main() {\n    let numbers = vec![1, 2, 3];\n    \n    // \u65b9\u5f0f 1: \u4f7f\u7528 Option\n    if let Some(first) = get_first_element_safe(&numbers) {\n        println!("\u7b2c\u4e00\u4e2a\u5143\u7d20: {}", first);\n    }\n    \n    // \u65b9\u5f0f 2: \u63d0\u4f9b\u9ed8\u8ba4\u503c\n    let first = get_first_element_safe(&numbers).unwrap_or(0);\n}\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-\u5b9e\u9645\u4f7f\u7528\u5efa\u8bae",children:"\ud83c\udfaf \u5b9e\u9645\u4f7f\u7528\u5efa\u8bae"}),"\n",(0,i.jsxs)(e.h3,{id:"1-99-\u7684\u60c5\u51b5\u4f7f\u7528-result",children:["1. 99% \u7684\u60c5\u51b5\u4f7f\u7528 ",(0,i.jsx)(e.code,{children:"Result"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:"use std::fs::File;\nuse std::io::{self, Read};\n\n// \u2705 \u6587\u4ef6\u64cd\u4f5c\nfn read_config(path: &str) -> Result<String, io::Error> {\n    let mut file = File::open(path)?;\n    let mut contents = String::new();\n    file.read_to_string(&mut contents)?;\n    Ok(contents)\n}\n\n// \u2705 \u7f51\u7edc\u8bf7\u6c42\nasync fn fetch_data(url: &str) -> Result<String, reqwest::Error> {\n    let response = reqwest::get(url).await?;\n    response.text().await\n}\n\n// \u2705 \u89e3\u6790\u6570\u636e\nfn parse_json(data: &str) -> Result<serde_json::Value, serde_json::Error> {\n    serde_json::from_str(data)\n}\n"})}),"\n",(0,i.jsxs)(e.h3,{id:"2-\u5f88\u5c11\u4f7f\u7528-panic",children:["2. \u5f88\u5c11\u4f7f\u7528 ",(0,i.jsx)(e.code,{children:"panic!"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'// \u2705 \u5408\u7406\u4f7f\u7528 panic! \u7684\u573a\u666f\n\n// \u573a\u666f 1: \u65ad\u8a00\u4e0d\u53d8\u91cf\nfn set_percentage(value: u8) {\n    assert!(value <= 100, "\u767e\u5206\u6bd4\u4e0d\u80fd\u8d85\u8fc7 100");\n    // ...\n}\n\n// \u573a\u666f 2: \u4e0d\u53ef\u80fd\u7684\u60c5\u51b5\nfn process_enum(value: MyEnum) {\n    match value {\n        MyEnum::A => { /* \u5904\u7406 A */ },\n        MyEnum::B => { /* \u5904\u7406 B */ },\n        _ => unreachable!("MyEnum \u53ea\u6709 A \u548c B \u4e24\u4e2a\u53d8\u4f53"),\n    }\n}\n\n// \u573a\u666f 3: \u5f00\u53d1\u65f6\u7684\u5feb\u901f\u5931\u8d25\nfn main() {\n    let config = std::fs::read_to_string("config.toml")\n        .expect("\u914d\u7f6e\u6587\u4ef6\u5fc5\u987b\u5b58\u5728");  // \u5f00\u53d1\u65f6\u53ef\u4ee5\u8fd9\u6837\n}\n'})}),"\n",(0,i.jsxs)(e.h3,{id:"3-\u5f00\u53d1\u65f6\u53ef\u4ee5\u7528-unwrapexpect",children:["3. \u5f00\u53d1\u65f6\u53ef\u4ee5\u7528 ",(0,i.jsx)(e.code,{children:"unwrap"}),"/",(0,i.jsx)(e.code,{children:"expect"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'// \u5f00\u53d1\u9636\u6bb5 - \u5feb\u901f\u539f\u578b\nfn prototype() {\n    let file = File::open("test.txt").unwrap();  // \u5feb\u901f\u6d4b\u8bd5\n    let data: i32 = "42".parse().expect("\u5e94\u8be5\u662f\u6570\u5b57");\n}\n\n// \u751f\u4ea7\u4ee3\u7801 - \u6b63\u786e\u5904\u7406\nfn production() -> Result<(), Box<dyn std::error::Error>> {\n    let file = File::open("test.txt")?;  // \u4f20\u64ad\u9519\u8bef\n    let data: i32 = "42".parse()?;\n    Ok(())\n}\n'})}),"\n",(0,i.jsxs)(e.h3,{id:"4-\u751f\u4ea7\u4ee3\u7801\u907f\u514d-panic",children:["4. \u751f\u4ea7\u4ee3\u7801\u907f\u514d ",(0,i.jsx)(e.code,{children:"panic!"})]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'// \u274c \u4e0d\u597d - \u751f\u4ea7\u4ee3\u7801\u4e2d panic\nfn process_request(data: &str) -> String {\n    let parsed: i32 = data.parse().unwrap();  // \u7528\u6237\u8f93\u5165\u9519\u8bef\u5c31\u5d29\u6e83\uff01\n    format!("\u7ed3\u679c: {}", parsed * 2)\n}\n\n// \u2705 \u597d - \u8fd4\u56de Result\nfn process_request(data: &str) -> Result<String, String> {\n    let parsed: i32 = data.parse()\n        .map_err(|e| format!("\u89e3\u6790\u5931\u8d25: {}", e))?;\n    Ok(format!("\u7ed3\u679c: {}", parsed * 2))\n}\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-panic-\u7684\u9ad8\u7ea7\u7528\u6cd5",children:"\ud83d\udd27 panic! \u7684\u9ad8\u7ea7\u7528\u6cd5"}),"\n",(0,i.jsx)(e.h3,{id:"1-\u81ea\u5b9a\u4e49-panic-\u5904\u7406\u5668",children:"1. \u81ea\u5b9a\u4e49 panic \u5904\u7406\u5668"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'use std::panic;\n\nfn main() {\n    // \u8bbe\u7f6e\u81ea\u5b9a\u4e49 panic \u94a9\u5b50\n    panic::set_hook(Box::new(|panic_info| {\n        eprintln!("\u7a0b\u5e8f\u5d29\u6e83\u4e86\uff01");\n        if let Some(s) = panic_info.payload().downcast_ref::<&str>() {\n            eprintln!("panic \u6d88\u606f: {}", s);\n        }\n        if let Some(location) = panic_info.location() {\n            eprintln!("\u4f4d\u7f6e: {}:{}", location.file(), location.line());\n        }\n    }));\n\n    panic!("\u6d4b\u8bd5 panic");\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"2-\u6355\u83b7-panic\u4e0d\u63a8\u8350",children:"2. \u6355\u83b7 panic\uff08\u4e0d\u63a8\u8350\uff09"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'use std::panic;\n\nfn main() {\n    let result = panic::catch_unwind(|| {\n        panic!("\u51fa\u9519\u4e86\uff01");\n    });\n\n    match result {\n        Ok(_) => println!("\u6ca1\u6709 panic"),\n        Err(_) => println!("\u6355\u83b7\u5230 panic"),\n    }\n}\n'})}),"\n",(0,i.jsx)(e.h3,{id:"3-\u65ad\u8a00\u5b8f\u5bb6\u65cf",children:"3. \u65ad\u8a00\u5b8f\u5bb6\u65cf"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-rust",children:'fn test_assertions() {\n    // assert! - \u6761\u4ef6\u4e3a false \u65f6 panic\n    assert!(2 + 2 == 4);\n    \n    // assert_eq! - \u4e24\u4e2a\u503c\u4e0d\u76f8\u7b49\u65f6 panic\n    assert_eq!(2 + 2, 4);\n    \n    // assert_ne! - \u4e24\u4e2a\u503c\u76f8\u7b49\u65f6 panic\n    assert_ne!(2 + 2, 5);\n    \n    // debug_assert! - \u53ea\u5728 debug \u6a21\u5f0f\u4e0b\u68c0\u67e5\n    debug_assert!(expensive_check());\n    \n    // unreachable! - \u6807\u8bb0\u4e0d\u5e94\u8be5\u5230\u8fbe\u7684\u4ee3\u7801\n    match some_value {\n        1 => {},\n        2 => {},\n        _ => unreachable!("\u53ea\u53ef\u80fd\u662f 1 \u6216 2"),\n    }\n    \n    // unimplemented! - \u6807\u8bb0\u672a\u5b9e\u73b0\u7684\u529f\u80fd\n    fn todo_function() {\n        unimplemented!("\u7a0d\u540e\u5b9e\u73b0");\n    }\n}\n'})}),"\n",(0,i.jsx)(e.hr,{}),"\n",(0,i.jsx)(e.h2,{id:"-\u603b\u7ed3",children:"\ud83d\udcdd \u603b\u7ed3"}),"\n",(0,i.jsx)(e.h3,{id:"panic-\u8fd9\u4e2a\u540d\u5b57\u5f88\u8d34\u5207",children:"panic! \u8fd9\u4e2a\u540d\u5b57\u5f88\u8d34\u5207"}),"\n",(0,i.jsxs)(e.p,{children:['\u5b83\u544a\u8bc9\u4f60\uff1a"\u8fd9\u662f\u7d27\u6025\u60c5\u51b5\uff0c\u7a0b\u5e8f\u8981\u505c\u6b62\u4e86\uff01" \u800c\u4e0d\u662f\u50cf ',(0,i.jsx)(e.code,{children:"throw"}),' \u90a3\u6837\u6697\u793a"\u8fd9\u53ea\u662f\u4e2a\u53ef\u4ee5\u5904\u7406\u7684\u5f02\u5e38"\u3002']}),"\n",(0,i.jsx)(e.h3,{id:"rust-\u7684\u9519\u8bef\u5904\u7406\u4f18\u52bf",children:"Rust \u7684\u9519\u8bef\u5904\u7406\u4f18\u52bf"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7c7b\u578b\u7cfb\u7edf\u5f3a\u5236\u5904\u7406\u9519\u8bef"})," - ",(0,i.jsx)(e.code,{children:"Result"})," \u5fc5\u987b\u88ab\u5904\u7406"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u533a\u5206\u53ef\u6062\u590d\u548c\u4e0d\u53ef\u6062\u590d"})," - \u6e05\u6670\u7684\u9519\u8bef\u5206\u7c7b"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u96f6\u6210\u672c\u62bd\u8c61"})," - ",(0,i.jsx)(e.code,{children:"Result"})," \u548c ",(0,i.jsx)(e.code,{children:"?"})," \u64cd\u4f5c\u7b26\u6027\u80fd\u4f18\u79c0"]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.strong,{children:"\u7f16\u8bd1\u65f6\u4fdd\u8bc1"})," - \u4e0d\u4f1a\u5fd8\u8bb0\u5904\u7406\u9519\u8bef"]}),"\n"]}),"\n",(0,i.jsx)(e.h3,{id:"\u8bb0\u4f4f\u8fd9\u4e2a\u539f\u5219",children:"\u8bb0\u4f4f\u8fd9\u4e2a\u539f\u5219"}),"\n",(0,i.jsxs)(e.blockquote,{children:["\n",(0,i.jsxs)(e.p,{children:[(0,i.jsxs)(e.strong,{children:["\u5982\u679c\u9519\u8bef\u662f\u9884\u671f\u7684\u3001\u53ef\u6062\u590d\u7684 \u2192 \u4f7f\u7528 ",(0,i.jsx)(e.code,{children:"Result"})]}),(0,i.jsx)(e.br,{}),"\n",(0,i.jsxs)(e.strong,{children:["\u5982\u679c\u9519\u8bef\u662f\u7a0b\u5e8f bug\u3001\u4e0d\u53ef\u6062\u590d\u7684 \u2192 \u4f7f\u7528 ",(0,i.jsx)(e.code,{children:"panic!"})]})]}),"\n"]}),"\n",(0,i.jsxs)(e.p,{children:["\u8fd9\u5c31\u662f\u4e3a\u4ec0\u4e48 Rust \u9009\u62e9\u4e86 ",(0,i.jsx)(e.code,{children:"panic!"})," \u8fd9\u4e2a\u540d\u5b57\uff0c\u800c\u4e0d\u662f ",(0,i.jsx)(e.code,{children:"throw"})," - \u5b83\u4eec\u4ee3\u8868\u4e86\u5b8c\u5168\u4e0d\u540c\u7684\u9519\u8bef\u5904\u7406\u54f2\u5b66\uff01"]})]})}function o(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(h,{...n})}):h(n)}}}]);